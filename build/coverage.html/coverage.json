{"/home/travis/build/npmtest/node-npmtest-jscodeshift/test.js":{"path":"/home/travis/build/npmtest/node-npmtest-jscodeshift/test.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":1,"12":1,"13":1,"14":1,"15":2,"16":2,"17":2,"18":2,"19":1,"20":1,"21":2,"22":2,"23":2,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":2,"40":2,"41":1,"42":2,"43":2,"44":1,"45":2,"46":2,"47":1,"48":2,"49":2,"50":1,"51":1,"52":1,"53":1,"54":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[1,1],"5":[1,1],"6":[1,1],"7":[1,1],"8":[1,1],"9":[1,1],"10":[1,1,1],"11":[1,1],"12":[1,1],"13":[1,1],"14":[1,1],"15":[1,1],"16":[1,1],"17":[1,1]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}},"4":{"name":"(anonymous_4)","line":61,"loc":{"start":{"line":61,"column":5},"end":{"line":61,"column":17}}},"5":{"name":"(anonymous_5)","line":82,"loc":{"start":{"line":82,"column":5},"end":{"line":82,"column":17}}},"6":{"name":"(anonymous_6)","line":91,"loc":{"start":{"line":91,"column":77},"end":{"line":94,"column":10}}},"7":{"name":"(anonymous_7)","line":112,"loc":{"start":{"line":112,"column":83},"end":{"line":115,"column":10}},"skip":true},"8":{"name":"(anonymous_8)","line":123,"loc":{"start":{"line":123,"column":77},"end":{"line":126,"column":10}},"skip":true},"9":{"name":"(anonymous_9)","line":139,"loc":{"start":{"line":139,"column":12},"end":{"line":139,"column":40}},"skip":true},"10":{"name":"(anonymous_10)","line":147,"loc":{"start":{"line":147,"column":77},"end":{"line":150,"column":10}},"skip":true},"11":{"name":"(anonymous_11)","line":158,"loc":{"start":{"line":158,"column":83},"end":{"line":161,"column":10}},"skip":true},"12":{"name":"(anonymous_12)","line":169,"loc":{"start":{"line":169,"column":79},"end":{"line":172,"column":10}},"skip":true},"13":{"name":"(anonymous_13)","line":180,"loc":{"start":{"line":180,"column":75},"end":{"line":183,"column":10}},"skip":true}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":195,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":56,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":40,"column":8},"end":{"line":53,"column":9}},"11":{"start":{"line":43,"column":12},"end":{"line":46,"column":14}},"12":{"start":{"line":47,"column":12},"end":{"line":47,"column":18}},"13":{"start":{"line":50,"column":12},"end":{"line":51,"column":33}},"14":{"start":{"line":52,"column":12},"end":{"line":52,"column":18}},"15":{"start":{"line":55,"column":8},"end":{"line":55,"column":35}},"16":{"start":{"line":61,"column":4},"end":{"line":63,"column":9}},"17":{"start":{"line":62,"column":8},"end":{"line":62,"column":15}},"18":{"start":{"line":64,"column":4},"end":{"line":77,"column":5}},"19":{"start":{"line":70,"column":8},"end":{"line":70,"column":14}},"20":{"start":{"line":76,"column":8},"end":{"line":76,"column":14}},"21":{"start":{"line":82,"column":4},"end":{"line":84,"column":9}},"22":{"start":{"line":83,"column":8},"end":{"line":83,"column":15}},"23":{"start":{"line":85,"column":4},"end":{"line":194,"column":5}},"24":{"start":{"line":91,"column":8},"end":{"line":99,"column":10}},"25":{"start":{"line":98,"column":12},"end":{"line":98,"column":35}},"26":{"start":{"line":102,"column":8},"end":{"line":104,"column":63}},"27":{"start":{"line":105,"column":8},"end":{"line":105,"column":14}},"28":{"start":{"line":112,"column":8},"end":{"line":121,"column":10},"skip":true},"29":{"start":{"line":119,"column":12},"end":{"line":119,"column":55},"skip":true},"30":{"start":{"line":120,"column":12},"end":{"line":120,"column":48},"skip":true},"31":{"start":{"line":123,"column":8},"end":{"line":136,"column":10},"skip":true},"32":{"start":{"line":130,"column":12},"end":{"line":130,"column":76},"skip":true},"33":{"start":{"line":131,"column":12},"end":{"line":131,"column":73},"skip":true},"34":{"start":{"line":132,"column":12},"end":{"line":132,"column":74},"skip":true},"35":{"start":{"line":133,"column":12},"end":{"line":133,"column":79},"skip":true},"36":{"start":{"line":134,"column":12},"end":{"line":134,"column":25},"skip":true},"37":{"start":{"line":135,"column":12},"end":{"line":135,"column":45},"skip":true},"38":{"start":{"line":138,"column":8},"end":{"line":145,"column":14},"skip":true},"39":{"start":{"line":143,"column":16},"end":{"line":143,"column":29},"skip":true},"40":{"start":{"line":144,"column":16},"end":{"line":144,"column":55},"skip":true},"41":{"start":{"line":147,"column":8},"end":{"line":156,"column":10},"skip":true},"42":{"start":{"line":154,"column":12},"end":{"line":154,"column":25},"skip":true},"43":{"start":{"line":155,"column":12},"end":{"line":155,"column":45},"skip":true},"44":{"start":{"line":158,"column":8},"end":{"line":167,"column":10},"skip":true},"45":{"start":{"line":165,"column":12},"end":{"line":165,"column":25},"skip":true},"46":{"start":{"line":166,"column":12},"end":{"line":166,"column":48},"skip":true},"47":{"start":{"line":169,"column":8},"end":{"line":178,"column":10},"skip":true},"48":{"start":{"line":176,"column":12},"end":{"line":176,"column":25},"skip":true},"49":{"start":{"line":177,"column":12},"end":{"line":177,"column":46},"skip":true},"50":{"start":{"line":180,"column":8},"end":{"line":189,"column":10},"skip":true},"51":{"start":{"line":187,"column":12},"end":{"line":187,"column":94},"skip":true},"52":{"start":{"line":188,"column":12},"end":{"line":188,"column":48},"skip":true},"53":{"start":{"line":192,"column":8},"end":{"line":192,"column":35},"skip":true},"54":{"start":{"line":193,"column":8},"end":{"line":193,"column":14},"skip":true}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":40,"type":"switch","locations":[{"start":{"line":42,"column":8},"end":{"line":47,"column":18}},{"start":{"line":49,"column":8},"end":{"line":52,"column":18}}]},"5":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":16},"end":{"line":44,"column":44}},{"start":{"line":44,"column":48},"end":{"line":44,"column":66}}]},"6":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":21},"end":{"line":50,"column":49}},{"start":{"line":50,"column":53},"end":{"line":50,"column":72}}]},"7":{"line":64,"type":"switch","locations":[{"start":{"line":69,"column":4},"end":{"line":70,"column":14}},{"start":{"line":75,"column":4},"end":{"line":76,"column":14}}]},"8":{"line":85,"type":"switch","locations":[{"start":{"line":90,"column":4},"end":{"line":105,"column":14}},{"start":{"line":111,"column":4},"end":{"line":193,"column":14},"skip":true}]},"9":{"line":91,"type":"binary-expr","locations":[{"start":{"line":91,"column":42},"end":{"line":91,"column":73}},{"start":{"line":91,"column":77},"end":{"line":99,"column":9}}]},"10":{"line":102,"type":"binary-expr","locations":[{"start":{"line":102,"column":18},"end":{"line":102,"column":32}},{"start":{"line":103,"column":12},"end":{"line":103,"column":53}},{"start":{"line":104,"column":12},"end":{"line":104,"column":61}}]},"11":{"line":112,"type":"binary-expr","locations":[{"start":{"line":112,"column":45},"end":{"line":112,"column":79},"skip":true},{"start":{"line":112,"column":83},"end":{"line":121,"column":9},"skip":true}]},"12":{"line":123,"type":"binary-expr","locations":[{"start":{"line":123,"column":42},"end":{"line":123,"column":73},"skip":true},{"start":{"line":123,"column":77},"end":{"line":136,"column":9},"skip":true}]},"13":{"line":138,"type":"binary-expr","locations":[{"start":{"line":138,"column":48},"end":{"line":138,"column":85},"skip":true},{"start":{"line":139,"column":12},"end":{"line":145,"column":13},"skip":true}]},"14":{"line":147,"type":"binary-expr","locations":[{"start":{"line":147,"column":42},"end":{"line":147,"column":73},"skip":true},{"start":{"line":147,"column":77},"end":{"line":156,"column":9},"skip":true}]},"15":{"line":158,"type":"binary-expr","locations":[{"start":{"line":158,"column":45},"end":{"line":158,"column":79},"skip":true},{"start":{"line":158,"column":83},"end":{"line":167,"column":9},"skip":true}]},"16":{"line":169,"type":"binary-expr","locations":[{"start":{"line":169,"column":43},"end":{"line":169,"column":75},"skip":true},{"start":{"line":169,"column":79},"end":{"line":178,"column":9},"skip":true}]},"17":{"line":180,"type":"binary-expr","locations":[{"start":{"line":180,"column":41},"end":{"line":180,"column":71},"skip":true},{"start":{"line":180,"column":75},"end":{"line":189,"column":9},"skip":true}]}},"code":["/* istanbul instrument in package npmtest_jscodeshift */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        switch (local.modeJs) {","        // re-init local from window.local","        case 'browser':","            local = local.global.utility2.objectSetDefault(","                local.global.utility2_rollup || local.global.local,","                local.global.utility2","            );","            break;","        // re-init local from example.js","        case 'node':","            local = (local.global.utility2_rollup || require('utility2'))","                .requireReadme();","            break;","        }","        // export local","        local.global.local = local;","    }());","","","","    // run shared js-env code - function","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - function","    case 'browser':","        break;","","","","    // run node js-env code - function","    case 'node':","        break;","    }","","","","    // run shared js-env code - post-init","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - post-init","    case 'browser':","        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (","            options,","            onError","        ) {","        /*","         * this function will test browsers's null-case handling-behavior-behavior","         */","            onError(null, options);","        };","","        // run tests","        local.nop(local.modeTest &&","            document.querySelector('#testRunButton1') &&","            document.querySelector('#testRunButton1').click());","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApidoc's default handling-behavior-behavior","         */","            options = { modulePathList: module.paths };","            local.buildApidoc(options, onError);","        };","","        local.testCase_buildApp_default = local.testCase_buildApp_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApp's default handling-behavior-behavior","         */","            local.testCase_buildReadme_default(options, local.onErrorThrow);","            local.testCase_buildLib_default(options, local.onErrorThrow);","            local.testCase_buildTest_default(options, local.onErrorThrow);","            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);","            options = [];","            local.buildApp(options, onError);","        };","","        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||","            function (options, onError) {","            /*","             * this function will test buildCustomOrg's default handling-behavior","             */","                options = {};","                local.buildCustomOrg(options, onError);","            };","","        local.testCase_buildLib_default = local.testCase_buildLib_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildLib's default handling-behavior","         */","            options = {};","            local.buildLib(options, onError);","        };","","        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildReadme's default handling-behavior-behavior","         */","            options = {};","            local.buildReadme(options, onError);","        };","","        local.testCase_buildTest_default = local.testCase_buildTest_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildTest's default handling-behavior","         */","            options = {};","            local.buildTest(options, onError);","        };","","        local.testCase_webpage_default = local.testCase_webpage_default || function (","            options,","            onError","        ) {","        /*","         * this function will test webpage's default handling-behavior","         */","            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };","            local.browserTest(options, onError);","        };","","        // run test-server","        local.testRunServer(local);","        break;","    }","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"40":2,"43":1,"47":1,"50":1,"52":1,"55":2,"61":2,"62":2,"64":2,"70":1,"76":1,"82":2,"83":2,"85":2,"91":1,"98":1,"102":1,"105":1,"112":1,"119":1,"120":1,"123":1,"130":1,"131":1,"132":1,"133":1,"134":1,"135":1,"138":1,"143":2,"144":2,"147":1,"154":2,"155":2,"158":1,"165":2,"166":2,"169":1,"176":2,"177":2,"180":1,"187":1,"188":1,"192":1,"193":1}},"/home/travis/build/npmtest/node-npmtest-jscodeshift/lib.npmtest_jscodeshift.js":{"path":"/home/travis/build/npmtest/node-npmtest-jscodeshift/lib.npmtest_jscodeshift.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":1,"15":1,"16":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1]},"f":{"1":2,"2":2,"3":2},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":53,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":52,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":41,"column":8},"end":{"line":41,"column":54}},"11":{"start":{"line":43,"column":8},"end":{"line":43,"column":56}},"12":{"start":{"line":45,"column":8},"end":{"line":51,"column":9}},"13":{"start":{"line":46,"column":12},"end":{"line":46,"column":62}},"14":{"start":{"line":48,"column":12},"end":{"line":48,"column":35}},"15":{"start":{"line":49,"column":12},"end":{"line":49,"column":49}},"16":{"start":{"line":50,"column":12},"end":{"line":50,"column":43}}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":16},"end":{"line":41,"column":44}},{"start":{"line":41,"column":48},"end":{"line":41,"column":53}}]},"5":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":8},"end":{"line":45,"column":8}},{"start":{"line":45,"column":8},"end":{"line":45,"column":8}}]}},"code":["/* istanbul instrument in package npmtest_jscodeshift */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || local;","        // init lib","        local.local = local.npmtest_jscodeshift = local;","        // init exports","        if (local.modeJs === 'browser') {","            local.global.utility2_npmtest_jscodeshift = local;","        } else {","            module.exports = local;","            module.exports.__dirname = __dirname;","            module.exports.module = module;","        }","    }());","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"41":2,"43":2,"45":2,"46":1,"48":1,"49":1,"50":1}},"/home/travis/build/npmtest/node-npmtest-jscodeshift/example.js":{"path":"/home/travis/build/npmtest/node-npmtest-jscodeshift/example.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":2,"15":2,"16":2,"17":2,"18":2,"19":0,"20":2,"21":1,"22":1,"23":1,"24":1,"25":1,"26":0,"27":0,"28":1,"29":1,"30":2,"31":0,"32":0,"33":0,"34":1,"35":2,"36":2,"37":3,"38":3,"39":3,"40":3,"41":0,"42":3,"43":3,"44":3,"45":1,"46":3,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":0,"58":1,"59":6,"60":6,"61":1,"62":2,"63":0,"64":2,"65":1,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1],"6":[1,1],"7":[2,0],"8":[2,1,1,1,1,1],"9":[0,2,0],"10":[1,1],"11":[2,1,1],"12":[1,0],"13":[0,2],"14":[2,0,0,0,0,0,0],"15":[0,3],"16":[3,0],"17":[1,1],"18":[0,1],"19":[1,2,0,2],"20":[1,0],"21":[1,1],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":3,"8":3,"9":3,"10":1,"11":6,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":26,"loc":{"start":{"line":26,"column":1},"end":{"line":26,"column":13}}},"2":{"name":"(anonymous_2)","line":33,"loc":{"start":{"line":33,"column":5},"end":{"line":33,"column":17}}},"3":{"name":"(anonymous_3)","line":37,"loc":{"start":{"line":37,"column":24},"end":{"line":37,"column":36}}},"4":{"name":"(anonymous_4)","line":69,"loc":{"start":{"line":69,"column":31},"end":{"line":69,"column":48}},"skip":true},"5":{"name":"(anonymous_5)","line":78,"loc":{"start":{"line":78,"column":26},"end":{"line":78,"column":45}},"skip":true},"6":{"name":"(anonymous_6)","line":123,"loc":{"start":{"line":123,"column":33},"end":{"line":123,"column":48}},"skip":true},"7":{"name":"(anonymous_7)","line":125,"loc":{"start":{"line":125,"column":27},"end":{"line":125,"column":39}},"skip":true},"8":{"name":"(anonymous_8)","line":133,"loc":{"start":{"line":133,"column":59},"end":{"line":133,"column":74}},"skip":true},"9":{"name":"(anonymous_9)","line":143,"loc":{"start":{"line":143,"column":45},"end":{"line":143,"column":62}},"skip":true},"10":{"name":"(anonymous_10)","line":144,"loc":{"start":{"line":144,"column":73},"end":{"line":144,"column":92}},"skip":true},"11":{"name":"(anonymous_11)","line":272,"loc":{"start":{"line":272,"column":51},"end":{"line":272,"column":77}},"skip":true},"12":{"name":"(anonymous_12)","line":315,"loc":{"start":{"line":315,"column":32},"end":{"line":315,"column":61}},"skip":true}},"statementMap":{"1":{"start":{"line":26,"column":0},"end":{"line":326,"column":5}},"2":{"start":{"line":28,"column":4},"end":{"line":28,"column":14}},"3":{"start":{"line":33,"column":4},"end":{"line":60,"column":9}},"4":{"start":{"line":35,"column":8},"end":{"line":35,"column":19}},"5":{"start":{"line":37,"column":8},"end":{"line":49,"column":13}},"6":{"start":{"line":38,"column":12},"end":{"line":48,"column":13}},"7":{"start":{"line":39,"column":16},"end":{"line":42,"column":30}},"8":{"start":{"line":44,"column":16},"end":{"line":47,"column":27}},"9":{"start":{"line":51,"column":8},"end":{"line":53,"column":21}},"10":{"start":{"line":55,"column":8},"end":{"line":57,"column":45}},"11":{"start":{"line":59,"column":8},"end":{"line":59,"column":35}},"12":{"start":{"line":61,"column":4},"end":{"line":325,"column":5}},"13":{"start":{"line":69,"column":8},"end":{"line":121,"column":10},"skip":true},"14":{"start":{"line":70,"column":12},"end":{"line":88,"column":13},"skip":true},"15":{"start":{"line":76,"column":16},"end":{"line":87,"column":19},"skip":true},"16":{"start":{"line":79,"column":20},"end":{"line":86,"column":21},"skip":true},"17":{"start":{"line":82,"column":24},"end":{"line":82,"column":43},"skip":true},"18":{"start":{"line":83,"column":24},"end":{"line":83,"column":30},"skip":true},"19":{"start":{"line":85,"column":24},"end":{"line":85,"column":49},"skip":true},"20":{"start":{"line":89,"column":12},"end":{"line":107,"column":13},"skip":true},"21":{"start":{"line":92,"column":16},"end":{"line":102,"column":17},"skip":true},"22":{"start":{"line":93,"column":20},"end":{"line":93,"column":86},"skip":true},"23":{"start":{"line":94,"column":20},"end":{"line":95,"column":45},"skip":true},"24":{"start":{"line":96,"column":20},"end":{"line":96,"column":42},"skip":true},"25":{"start":{"line":97,"column":20},"end":{"line":97,"column":48},"skip":true},"26":{"start":{"line":100,"column":20},"end":{"line":100,"column":85},"skip":true},"27":{"start":{"line":101,"column":20},"end":{"line":101,"column":96},"skip":true},"28":{"start":{"line":103,"column":16},"end":{"line":103,"column":22},"skip":true},"29":{"start":{"line":106,"column":16},"end":{"line":106,"column":22},"skip":true},"30":{"start":{"line":108,"column":12},"end":{"line":120,"column":13},"skip":true},"31":{"start":{"line":114,"column":16},"end":{"line":119,"column":17},"skip":true},"32":{"start":{"line":116,"column":20},"end":{"line":116,"column":78},"skip":true},"33":{"start":{"line":118,"column":20},"end":{"line":118,"column":47},"skip":true},"34":{"start":{"line":123,"column":8},"end":{"line":141,"column":11},"skip":true},"35":{"start":{"line":124,"column":12},"end":{"line":124,"column":54},"skip":true},"36":{"start":{"line":125,"column":12},"end":{"line":140,"column":14},"skip":true},"37":{"start":{"line":126,"column":16},"end":{"line":126,"column":28},"skip":true},"38":{"start":{"line":127,"column":16},"end":{"line":127,"column":69},"skip":true},"39":{"start":{"line":128,"column":16},"end":{"line":128,"column":75},"skip":true},"40":{"start":{"line":129,"column":16},"end":{"line":131,"column":17},"skip":true},"41":{"start":{"line":130,"column":20},"end":{"line":130,"column":27},"skip":true},"42":{"start":{"line":133,"column":16},"end":{"line":137,"column":36},"skip":true},"43":{"start":{"line":134,"column":20},"end":{"line":136,"column":55},"skip":true},"44":{"start":{"line":139,"column":16},"end":{"line":139,"column":57},"skip":true},"45":{"start":{"line":143,"column":8},"end":{"line":147,"column":11},"skip":true},"46":{"start":{"line":144,"column":12},"end":{"line":146,"column":15},"skip":true},"47":{"start":{"line":145,"column":16},"end":{"line":145,"column":70},"skip":true},"48":{"start":{"line":149,"column":8},"end":{"line":149,"column":31},"skip":true},"49":{"start":{"line":150,"column":8},"end":{"line":150,"column":14},"skip":true},"50":{"start":{"line":158,"column":8},"end":{"line":158,"column":31},"skip":true},"51":{"start":{"line":160,"column":8},"end":{"line":160,"column":33},"skip":true},"52":{"start":{"line":161,"column":8},"end":{"line":161,"column":37},"skip":true},"53":{"start":{"line":162,"column":8},"end":{"line":162,"column":35},"skip":true},"54":{"start":{"line":164,"column":8},"end":{"line":164,"column":50},"skip":true},"55":{"start":{"line":166,"column":8},"end":{"line":256,"column":2},"skip":true},"56":{"start":{"line":258,"column":8},"end":{"line":286,"column":9},"skip":true},"57":{"start":{"line":259,"column":12},"end":{"line":269,"column":14},"skip":true},"58":{"start":{"line":271,"column":12},"end":{"line":285,"column":19},"skip":true},"59":{"start":{"line":274,"column":20},"end":{"line":274,"column":35},"skip":true},"60":{"start":{"line":275,"column":20},"end":{"line":284,"column":21},"skip":true},"61":{"start":{"line":277,"column":24},"end":{"line":277,"column":64},"skip":true},"62":{"start":{"line":279,"column":24},"end":{"line":279,"column":40},"skip":true},"63":{"start":{"line":281,"column":24},"end":{"line":281,"column":40},"skip":true},"64":{"start":{"line":283,"column":24},"end":{"line":283,"column":39},"skip":true},"65":{"start":{"line":288,"column":8},"end":{"line":290,"column":9},"skip":true},"66":{"start":{"line":289,"column":12},"end":{"line":289,"column":18},"skip":true},"67":{"start":{"line":291,"column":8},"end":{"line":293,"column":54},"skip":true},"68":{"start":{"line":296,"column":8},"end":{"line":301,"column":37},"skip":true},"69":{"start":{"line":303,"column":8},"end":{"line":303,"column":82},"skip":true},"70":{"start":{"line":306,"column":8},"end":{"line":308,"column":9},"skip":true},"71":{"start":{"line":307,"column":12},"end":{"line":307,"column":82},"skip":true},"72":{"start":{"line":310,"column":8},"end":{"line":312,"column":9},"skip":true},"73":{"start":{"line":311,"column":12},"end":{"line":311,"column":18},"skip":true},"74":{"start":{"line":313,"column":8},"end":{"line":313,"column":54},"skip":true},"75":{"start":{"line":314,"column":8},"end":{"line":314,"column":69},"skip":true},"76":{"start":{"line":315,"column":8},"end":{"line":323,"column":36},"skip":true},"77":{"start":{"line":316,"column":12},"end":{"line":316,"column":61},"skip":true},"78":{"start":{"line":317,"column":12},"end":{"line":320,"column":13},"skip":true},"79":{"start":{"line":318,"column":16},"end":{"line":318,"column":75},"skip":true},"80":{"start":{"line":319,"column":16},"end":{"line":319,"column":23},"skip":true},"81":{"start":{"line":321,"column":12},"end":{"line":321,"column":38},"skip":true},"82":{"start":{"line":322,"column":12},"end":{"line":322,"column":27},"skip":true},"83":{"start":{"line":324,"column":8},"end":{"line":324,"column":14},"skip":true}},"branchMap":{"1":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":23},"end":{"line":39,"column":62}},{"start":{"line":40,"column":20},"end":{"line":40,"column":70}},{"start":{"line":41,"column":20},"end":{"line":41,"column":71}},{"start":{"line":42,"column":20},"end":{"line":42,"column":29}}]},"2":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":23},"end":{"line":44,"column":37}},{"start":{"line":45,"column":20},"end":{"line":45,"column":61}},{"start":{"line":46,"column":20},"end":{"line":46,"column":70}},{"start":{"line":47,"column":20},"end":{"line":47,"column":26}}]},"3":{"line":51,"type":"cond-expr","locations":[{"start":{"line":52,"column":14},"end":{"line":52,"column":20}},{"start":{"line":53,"column":14},"end":{"line":53,"column":20}}]},"4":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":16},"end":{"line":55,"column":44}},{"start":{"line":55,"column":49},"end":{"line":57,"column":43}}]},"5":{"line":55,"type":"cond-expr","locations":[{"start":{"line":56,"column":14},"end":{"line":56,"column":55}},{"start":{"line":57,"column":14},"end":{"line":57,"column":43}}]},"6":{"line":61,"type":"switch","locations":[{"start":{"line":68,"column":4},"end":{"line":150,"column":14},"skip":true},{"start":{"line":156,"column":4},"end":{"line":324,"column":14},"skip":true}]},"7":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true},{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true}]},"8":{"line":70,"type":"binary-expr","locations":[{"start":{"line":70,"column":16},"end":{"line":70,"column":22},"skip":true},{"start":{"line":70,"column":27},"end":{"line":70,"column":32},"skip":true},{"start":{"line":71,"column":20},"end":{"line":71,"column":39},"skip":true},{"start":{"line":72,"column":20},"end":{"line":72,"column":49},"skip":true},{"start":{"line":73,"column":20},"end":{"line":73,"column":58},"skip":true},{"start":{"line":74,"column":20},"end":{"line":74,"column":69},"skip":true}]},"9":{"line":79,"type":"switch","locations":[{"start":{"line":80,"column":20},"end":{"line":80,"column":33},"skip":true},{"start":{"line":81,"column":20},"end":{"line":83,"column":30},"skip":true},{"start":{"line":84,"column":20},"end":{"line":85,"column":49},"skip":true}]},"10":{"line":89,"type":"switch","locations":[{"start":{"line":90,"column":12},"end":{"line":103,"column":22},"skip":true},{"start":{"line":105,"column":12},"end":{"line":106,"column":22},"skip":true}]},"11":{"line":89,"type":"binary-expr","locations":[{"start":{"line":89,"column":20},"end":{"line":89,"column":25},"skip":true},{"start":{"line":89,"column":29},"end":{"line":89,"column":48},"skip":true},{"start":{"line":89,"column":52},"end":{"line":89,"column":74},"skip":true}]},"12":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true},{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true}]},"13":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true},{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true}]},"14":{"line":108,"type":"binary-expr","locations":[{"start":{"line":108,"column":16},"end":{"line":108,"column":61},"skip":true},{"start":{"line":108,"column":66},"end":{"line":108,"column":72},"skip":true},{"start":{"line":108,"column":77},"end":{"line":108,"column":82},"skip":true},{"start":{"line":109,"column":20},"end":{"line":109,"column":39},"skip":true},{"start":{"line":110,"column":20},"end":{"line":110,"column":49},"skip":true},{"start":{"line":111,"column":20},"end":{"line":111,"column":58},"skip":true},{"start":{"line":112,"column":20},"end":{"line":112,"column":68},"skip":true}]},"15":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true},{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true}]},"16":{"line":134,"type":"cond-expr","locations":[{"start":{"line":135,"column":26},"end":{"line":135,"column":29},"skip":true},{"start":{"line":136,"column":26},"end":{"line":136,"column":54},"skip":true}]},"17":{"line":164,"type":"binary-expr","locations":[{"start":{"line":164,"column":27},"end":{"line":164,"column":43},"skip":true},{"start":{"line":164,"column":47},"end":{"line":164,"column":49},"skip":true}]},"18":{"line":258,"type":"if","locations":[{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true},{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true}]},"19":{"line":275,"type":"switch","locations":[{"start":{"line":276,"column":20},"end":{"line":277,"column":64},"skip":true},{"start":{"line":278,"column":20},"end":{"line":279,"column":40},"skip":true},{"start":{"line":280,"column":20},"end":{"line":281,"column":40},"skip":true},{"start":{"line":282,"column":20},"end":{"line":283,"column":39},"skip":true}]},"20":{"line":288,"type":"if","locations":[{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true},{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true}]},"21":{"line":288,"type":"binary-expr","locations":[{"start":{"line":288,"column":12},"end":{"line":288,"column":40},"skip":true},{"start":{"line":288,"column":44},"end":{"line":288,"column":67},"skip":true}]},"22":{"line":292,"type":"binary-expr","locations":[{"start":{"line":292,"column":12},"end":{"line":292,"column":50},"skip":true},{"start":{"line":293,"column":12},"end":{"line":293,"column":53},"skip":true}]},"23":{"line":297,"type":"binary-expr","locations":[{"start":{"line":297,"column":12},"end":{"line":297,"column":69},"skip":true},{"start":{"line":298,"column":12},"end":{"line":301,"column":36},"skip":true}]},"24":{"line":303,"type":"binary-expr","locations":[{"start":{"line":303,"column":43},"end":{"line":303,"column":75},"skip":true},{"start":{"line":303,"column":79},"end":{"line":303,"column":81},"skip":true}]},"25":{"line":306,"type":"if","locations":[{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true},{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true}]},"26":{"line":310,"type":"if","locations":[{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true},{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true}]},"27":{"line":313,"type":"binary-expr","locations":[{"start":{"line":313,"column":27},"end":{"line":313,"column":43},"skip":true},{"start":{"line":313,"column":47},"end":{"line":313,"column":53},"skip":true}]},"28":{"line":317,"type":"if","locations":[{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true},{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true}]}},"code":["/*","example.js","","quickstart example","","instruction","    1. save this script as example.js","    2. run the shell command:","        $ npm install npmtest-jscodeshift && PORT=8081 node example.js","    3. play with the browser-demo on http://127.0.0.1:8081","*/","","","","/* istanbul instrument in package npmtest_jscodeshift */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || (local.modeJs === 'browser'","            ? local.global.utility2_npmtest_jscodeshift","            : global.utility2_moduleExports);","        // export local","        local.global.local = local;","    }());","    switch (local.modeJs) {","","","","    // post-init","    // run browser js-env code - post-init","    /* istanbul ignore next */","    case 'browser':","        local.testRunBrowser = function (event) {","            if (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('onreset'))) {","                // reset output","                Array.from(","                    document.querySelectorAll('body > .resettable')","                ).forEach(function (element) {","                    switch (element.tagName) {","                    case 'INPUT':","                    case 'TEXTAREA':","                        element.value = '';","                        break;","                    default:","                        element.textContent = '';","                    }","                });","            }","            switch (event && event.currentTarget && event.currentTarget.id) {","            case 'testRunButton1':","                // show tests","                if (document.querySelector('#testReportDiv1').style.display === 'none') {","                    document.querySelector('#testReportDiv1').style.display = 'block';","                    document.querySelector('#testRunButton1').textContent =","                        'hide internal test';","                    local.modeTest = true;","                    local.testRunDefault(local);","                // hide tests","                } else {","                    document.querySelector('#testReportDiv1').style.display = 'none';","                    document.querySelector('#testRunButton1').textContent = 'run internal test';","                }","                break;","            // custom-case","            default:","                break;","            }","            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('oneval')))) {","                // try to eval input-code","                try {","                    /*jslint evil: true*/","                    eval(document.querySelector('#inputTextareaEval1').value);","                } catch (errorCaught) {","                    console.error(errorCaught);","                }","            }","        };","        // log stderr and stdout to #outputTextareaStdout1","        ['error', 'log'].forEach(function (key) {","            console[key + '_original'] = console[key];","            console[key] = function () {","                var element;","                console[key + '_original'].apply(console, arguments);","                element = document.querySelector('#outputTextareaStdout1');","                if (!element) {","                    return;","                }","                // append text to #outputTextareaStdout1","                element.value += Array.from(arguments).map(function (arg) {","                    return typeof arg === 'string'","                        ? arg","                        : JSON.stringify(arg, null, 4);","                }).join(' ') + '\\n';","                // scroll textarea to bottom","                element.scrollTop = element.scrollHeight;","            };","        });","        // init event-handling","        ['change', 'click', 'keyup'].forEach(function (event) {","            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {","                element.addEventListener(event, local.testRunBrowser);","            });","        });","        // run tests","        local.testRunBrowser();","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        // export local","        module.exports = local;","        // require modules","        local.fs = require('fs');","        local.http = require('http');","        local.url = require('url');","        // init assets","        local.assetsDict = local.assetsDict || {};","        /* jslint-ignore-begin */","        local.assetsDict['/assets.index.template.html'] = '\\","<!doctype html>\\n\\","<html lang=\"en\">\\n\\","<head>\\n\\","<meta charset=\"UTF-8\">\\n\\","<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\","<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\","<style>\\n\\","/*csslint\\n\\","    box-sizing: false,\\n\\","    universal-selector: false\\n\\","*/\\n\\","* {\\n\\","    box-sizing: border-box;\\n\\","}\\n\\","body {\\n\\","    background: #dde;\\n\\","    font-family: Arial, Helvetica, sans-serif;\\n\\","    margin: 2rem;\\n\\","}\\n\\","body > * {\\n\\","    margin-bottom: 1rem;\\n\\","}\\n\\",".utility2FooterDiv {\\n\\","    margin-top: 20px;\\n\\","    text-align: center;\\n\\","}\\n\\","</style>\\n\\","<style>\\n\\","/*csslint\\n\\","*/\\n\\","textarea {\\n\\","    font-family: monospace;\\n\\","    height: 10rem;\\n\\","    width: 100%;\\n\\","}\\n\\","textarea[readonly] {\\n\\","    background: #ddd;\\n\\","}\\n\\","</style>\\n\\","</head>\\n\\","<body>\\n\\","<!-- utility2-comment\\n\\","<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\","utility2-comment -->\\n\\","<h1>\\n\\","<!-- utility2-comment\\n\\","    <a\\n\\","        {{#if env.npm_package_homepage}}\\n\\","        href=\"{{env.npm_package_homepage}}\"\\n\\","        {{/if env.npm_package_homepage}}\\n\\","        target=\"_blank\"\\n\\","    >\\n\\","utility2-comment -->\\n\\","        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\","<!-- utility2-comment\\n\\","    </a>\\n\\","utility2-comment -->\\n\\","</h1>\\n\\","<h3>{{env.npm_package_description}}</h3>\\n\\","<!-- utility2-comment\\n\\","<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\","<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\","<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\","utility2-comment -->\\n\\","\\n\\","\\n\\","\\n\\","<label>stderr and stdout</label>\\n\\","<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\","<!-- utility2-comment\\n\\","{{#if isRollup}}\\n\\","<script src=\"assets.app.js\"></script>\\n\\","{{#unless isRollup}}\\n\\","utility2-comment -->\\n\\","<script src=\"assets.utility2.rollup.js\"></script>\\n\\","<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\","<script src=\"assets.npmtest_jscodeshift.rollup.js\"></script>\\n\\","<script src=\"assets.example.js\"></script>\\n\\","<script src=\"assets.test.js\"></script>\\n\\","<!-- utility2-comment\\n\\","{{/if isRollup}}\\n\\","utility2-comment -->\\n\\","<div class=\"utility2FooterDiv\">\\n\\","    [ this app was created with\\n\\","    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\","    ]\\n\\","</div>\\n\\","</body>\\n\\","</html>\\n\\","';","        /* jslint-ignore-end */","        if (local.templateRender) {","            local.assetsDict['/'] = local.templateRender(","                local.assetsDict['/assets.index.template.html'],","                {","                    env: local.objectSetDefault(local.env, {","                        npm_package_description: 'the greatest app in the world!',","                        npm_package_name: 'my-app',","                        npm_package_nameAlias: 'my_app',","                        npm_package_version: '0.0.1'","                    })","                }","            );","        } else {","            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']","                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {","                    // jslint-hack","                    String(match0);","                    switch (match1) {","                    case 'npm_package_description':","                        return 'the greatest app in the world!';","                    case 'npm_package_name':","                        return 'my-app';","                    case 'npm_package_nameAlias':","                        return 'my_app';","                    case 'npm_package_version':","                        return '0.0.1';","                    }","                });","        }","        // run the cli","        if (local.global.utility2_rollup || module !== require.main) {","            break;","        }","        local.assetsDict['/assets.example.js'] =","            local.assetsDict['/assets.example.js'] ||","            local.fs.readFileSync(__filename, 'utf8');","        // bug-workaround - long $npm_package_buildCustomOrg","        /* jslint-ignore-begin */","        local.assetsDict['/assets.npmtest_jscodeshift.rollup.js'] =","            local.assetsDict['/assets.npmtest_jscodeshift.rollup.js'] ||","            local.fs.readFileSync(","                local.npmtest_jscodeshift.__dirname + '/lib.npmtest_jscodeshift.js',","                'utf8'","            ).replace((/^#!/), '//');","        /* jslint-ignore-end */","        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';","        // if $npm_config_timeout_exit exists,","        // then exit this process after $npm_config_timeout_exit ms","        if (Number(process.env.npm_config_timeout_exit)) {","            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));","        }","        // start server","        if (local.global.utility2_serverHttp1) {","            break;","        }","        process.env.PORT = process.env.PORT || '8081';","        console.error('server starting on port ' + process.env.PORT);","        local.http.createServer(function (request, response) {","            request.urlParsed = local.url.parse(request.url);","            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {","                response.end(local.assetsDict[request.urlParsed.pathname]);","                return;","            }","            response.statusCode = 404;","            response.end();","        }).listen(process.env.PORT);","        break;","    }","}());",""],"l":{"26":2,"28":2,"33":2,"35":2,"37":2,"38":2,"39":2,"44":1,"51":2,"55":2,"59":2,"61":2,"69":1,"70":2,"76":2,"79":2,"82":2,"83":2,"85":1,"89":2,"92":1,"93":1,"94":1,"96":1,"97":1,"100":1,"101":1,"103":1,"106":1,"108":2,"114":1,"116":1,"118":1,"123":1,"124":2,"125":2,"126":3,"127":3,"128":3,"129":3,"130":1,"133":3,"134":3,"139":3,"143":1,"144":3,"145":1,"149":1,"150":1,"158":1,"160":1,"161":1,"162":1,"164":1,"166":1,"258":1,"259":1,"271":1,"274":6,"275":6,"277":1,"279":2,"281":1,"283":2,"288":1,"289":1,"291":1,"296":1,"303":1,"306":1,"307":1,"310":1,"311":1,"313":1,"314":1,"315":1,"316":1,"317":1,"318":1,"319":1,"321":1,"322":1,"324":1}},"/home/travis/build/npmtest/node-npmtest-jscodeshift/node_modules/jscodeshift/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-jscodeshift/node_modules/jscodeshift/index.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":11,"column":0},"end":{"line":11,"column":40}}},"branchMap":{},"code":["/*"," *  Copyright (c) 2015-present, Facebook, Inc."," *  All rights reserved."," *"," *  This source code is licensed under the BSD-style license found in the"," *  LICENSE file in the root directory of this source tree. An additional grant"," *  of patent rights can be found in the PATENTS file in the same directory."," *"," */","","module.exports = require('./dist/core');",""],"l":{"11":1}},"/home/travis/build/npmtest/node-npmtest-jscodeshift/node_modules/jscodeshift/dist/core.js":{"path":"/home/travis/build/npmtest/node-npmtest-jscodeshift/node_modules/jscodeshift/dist/core.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":3,"11":1,"12":0,"13":1,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":1,"25":0,"26":0,"27":0,"28":0,"29":0,"30":1,"31":0,"32":0,"33":0,"34":0,"35":0,"36":1,"37":1,"38":0,"39":0,"40":0,"41":1,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":1,"58":1,"59":1,"60":3,"61":2,"62":3,"63":1,"64":1,"65":1,"66":1,"67":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[2,1],"17":[1,2]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":1},"fnMap":{"1":{"name":"core","line":44,"loc":{"start":{"line":44,"column":0},"end":{"line":44,"column":31}}},"2":{"name":"fromAST","line":58,"loc":{"start":{"line":58,"column":0},"end":{"line":58,"column":22}}},"3":{"name":"fromSource","line":77,"loc":{"start":{"line":77,"column":0},"end":{"line":77,"column":37}}},"4":{"name":"match","line":95,"loc":{"start":{"line":95,"column":0},"end":{"line":95,"column":29}}},"5":{"name":"use","line":119,"loc":{"start":{"line":119,"column":0},"end":{"line":119,"column":21}}},"6":{"name":"withParser","line":133,"loc":{"start":{"line":133,"column":0},"end":{"line":133,"column":28}}},"7":{"name":"(anonymous_7)","line":138,"loc":{"start":{"line":138,"column":18},"end":{"line":138,"column":44}}},"8":{"name":"enrichCore","line":156,"loc":{"start":{"line":156,"column":0},"end":{"line":156,"column":34}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":12,"column":43}},"2":{"start":{"line":14,"column":0},"end":{"line":14,"column":45}},"3":{"start":{"line":15,"column":0},"end":{"line":15,"column":41}},"4":{"start":{"line":16,"column":0},"end":{"line":16,"column":41}},"5":{"start":{"line":17,"column":0},"end":{"line":17,"column":33}},"6":{"start":{"line":18,"column":0},"end":{"line":18,"column":39}},"7":{"start":{"line":20,"column":0},"end":{"line":20,"column":42}},"8":{"start":{"line":21,"column":0},"end":{"line":21,"column":39}},"9":{"start":{"line":24,"column":0},"end":{"line":26,"column":1}},"10":{"start":{"line":25,"column":2},"end":{"line":25,"column":31}},"11":{"start":{"line":44,"column":0},"end":{"line":48,"column":1}},"12":{"start":{"line":45,"column":2},"end":{"line":47,"column":20}},"13":{"start":{"line":58,"column":0},"end":{"line":75,"column":1}},"14":{"start":{"line":59,"column":2},"end":{"line":71,"column":3}},"15":{"start":{"line":60,"column":4},"end":{"line":64,"column":5}},"16":{"start":{"line":61,"column":6},"end":{"line":61,"column":39}},"17":{"start":{"line":62,"column":11},"end":{"line":64,"column":5}},"18":{"start":{"line":63,"column":6},"end":{"line":63,"column":39}},"19":{"start":{"line":66,"column":4},"end":{"line":70,"column":5}},"20":{"start":{"line":67,"column":6},"end":{"line":67,"column":41}},"21":{"start":{"line":68,"column":11},"end":{"line":70,"column":5}},"22":{"start":{"line":69,"column":6},"end":{"line":69,"column":41}},"23":{"start":{"line":72,"column":2},"end":{"line":74,"column":4}},"24":{"start":{"line":77,"column":0},"end":{"line":85,"column":1}},"25":{"start":{"line":78,"column":2},"end":{"line":80,"column":3}},"26":{"start":{"line":79,"column":4},"end":{"line":79,"column":17}},"27":{"start":{"line":81,"column":2},"end":{"line":83,"column":3}},"28":{"start":{"line":82,"column":4},"end":{"line":82,"column":33}},"29":{"start":{"line":84,"column":2},"end":{"line":84,"column":48}},"30":{"start":{"line":95,"column":0},"end":{"line":104,"column":1}},"31":{"start":{"line":96,"column":2},"end":{"line":102,"column":3}},"32":{"start":{"line":97,"column":4},"end":{"line":101,"column":5}},"33":{"start":{"line":98,"column":6},"end":{"line":98,"column":24}},"34":{"start":{"line":100,"column":6},"end":{"line":100,"column":27}},"35":{"start":{"line":103,"column":2},"end":{"line":103,"column":39}},"36":{"start":{"line":106,"column":0},"end":{"line":106,"column":19}},"37":{"start":{"line":119,"column":0},"end":{"line":124,"column":1}},"38":{"start":{"line":120,"column":2},"end":{"line":123,"column":3}},"39":{"start":{"line":121,"column":4},"end":{"line":121,"column":25}},"40":{"start":{"line":122,"column":4},"end":{"line":122,"column":17}},"41":{"start":{"line":133,"column":0},"end":{"line":148,"column":1}},"42":{"start":{"line":134,"column":2},"end":{"line":136,"column":3}},"43":{"start":{"line":135,"column":4},"end":{"line":135,"column":31}},"44":{"start":{"line":138,"column":2},"end":{"line":145,"column":4}},"45":{"start":{"line":139,"column":4},"end":{"line":143,"column":5}},"46":{"start":{"line":140,"column":6},"end":{"line":140,"column":30}},"47":{"start":{"line":142,"column":6},"end":{"line":142,"column":25}},"48":{"start":{"line":144,"column":4},"end":{"line":144,"column":33}},"49":{"start":{"line":147,"column":2},"end":{"line":147,"column":37}},"50":{"start":{"line":156,"column":0},"end":{"line":183,"column":1}},"51":{"start":{"line":158,"column":2},"end":{"line":158,"column":47}},"52":{"start":{"line":159,"column":2},"end":{"line":159,"column":45}},"53":{"start":{"line":160,"column":2},"end":{"line":160,"column":52}},"54":{"start":{"line":165,"column":2},"end":{"line":165,"column":28}},"55":{"start":{"line":166,"column":2},"end":{"line":166,"column":21}},"56":{"start":{"line":167,"column":2},"end":{"line":167,"column":35}},"57":{"start":{"line":170,"column":2},"end":{"line":170,"column":20}},"58":{"start":{"line":171,"column":2},"end":{"line":171,"column":21}},"59":{"start":{"line":172,"column":2},"end":{"line":179,"column":3}},"60":{"start":{"line":173,"column":4},"end":{"line":175,"column":5}},"61":{"start":{"line":174,"column":6},"end":{"line":174,"column":53}},"62":{"start":{"line":176,"column":4},"end":{"line":178,"column":5}},"63":{"start":{"line":177,"column":6},"end":{"line":177,"column":55}},"64":{"start":{"line":180,"column":2},"end":{"line":180,"column":17}},"65":{"start":{"line":181,"column":2},"end":{"line":181,"column":31}},"66":{"start":{"line":182,"column":2},"end":{"line":182,"column":14}},"67":{"start":{"line":185,"column":0},"end":{"line":185,"column":47}}},"branchMap":{"1":{"line":45,"type":"cond-expr","locations":[{"start":{"line":46,"column":4},"end":{"line":46,"column":31}},{"start":{"line":47,"column":4},"end":{"line":47,"column":19}}]},"2":{"line":59,"type":"if","locations":[{"start":{"line":59,"column":2},"end":{"line":59,"column":2}},{"start":{"line":59,"column":2},"end":{"line":59,"column":2}}]},"3":{"line":60,"type":"if","locations":[{"start":{"line":60,"column":4},"end":{"line":60,"column":4}},{"start":{"line":60,"column":4},"end":{"line":60,"column":4}}]},"4":{"line":60,"type":"binary-expr","locations":[{"start":{"line":60,"column":8},"end":{"line":60,"column":34}},{"start":{"line":60,"column":38},"end":{"line":60,"column":54}}]},"5":{"line":62,"type":"if","locations":[{"start":{"line":62,"column":11},"end":{"line":62,"column":11}},{"start":{"line":62,"column":11},"end":{"line":62,"column":11}}]},"6":{"line":66,"type":"if","locations":[{"start":{"line":66,"column":4},"end":{"line":66,"column":4}},{"start":{"line":66,"column":4},"end":{"line":66,"column":4}}]},"7":{"line":68,"type":"if","locations":[{"start":{"line":68,"column":11},"end":{"line":68,"column":11}},{"start":{"line":68,"column":11},"end":{"line":68,"column":11}}]},"8":{"line":78,"type":"if","locations":[{"start":{"line":78,"column":2},"end":{"line":78,"column":2}},{"start":{"line":78,"column":2},"end":{"line":78,"column":2}}]},"9":{"line":81,"type":"if","locations":[{"start":{"line":81,"column":2},"end":{"line":81,"column":2}},{"start":{"line":81,"column":2},"end":{"line":81,"column":2}}]},"10":{"line":96,"type":"if","locations":[{"start":{"line":96,"column":2},"end":{"line":96,"column":2}},{"start":{"line":96,"column":2},"end":{"line":96,"column":2}}]},"11":{"line":97,"type":"if","locations":[{"start":{"line":97,"column":4},"end":{"line":97,"column":4}},{"start":{"line":97,"column":4},"end":{"line":97,"column":4}}]},"12":{"line":120,"type":"if","locations":[{"start":{"line":120,"column":2},"end":{"line":120,"column":2}},{"start":{"line":120,"column":2},"end":{"line":120,"column":2}}]},"13":{"line":134,"type":"if","locations":[{"start":{"line":134,"column":2},"end":{"line":134,"column":2}},{"start":{"line":134,"column":2},"end":{"line":134,"column":2}}]},"14":{"line":139,"type":"if","locations":[{"start":{"line":139,"column":4},"end":{"line":139,"column":4}},{"start":{"line":139,"column":4},"end":{"line":139,"column":4}}]},"15":{"line":139,"type":"binary-expr","locations":[{"start":{"line":139,"column":8},"end":{"line":139,"column":15}},{"start":{"line":139,"column":19},"end":{"line":139,"column":34}}]},"16":{"line":173,"type":"if","locations":[{"start":{"line":173,"column":4},"end":{"line":173,"column":4}},{"start":{"line":173,"column":4},"end":{"line":173,"column":4}}]},"17":{"line":176,"type":"if","locations":[{"start":{"line":176,"column":4},"end":{"line":176,"column":4}},{"start":{"line":176,"column":4},"end":{"line":176,"column":4}}]}},"code":["/*"," *  Copyright (c) 2015-present, Facebook, Inc."," *  All rights reserved."," *"," *  This source code is licensed under the BSD-style license found in the"," *  LICENSE file in the root directory of this source tree. An additional grant"," *  of patent rights can be found in the PATENTS file in the same directory."," *"," */","","'use strict';","const Collection = require('./Collection');","","const collections = require('./collections');","const getParser = require('./getParser');","const matchNode = require('./matchNode');","const recast = require('recast');","const template = require('./template');","","const Node = recast.types.namedTypes.Node;","const NodePath = recast.types.NodePath;","","// Register all built-in collections","for (var name in collections) {","  collections[name].register();","}","","/**"," * Main entry point to the tool. The function accepts multiple different kinds"," * of arguments as a convenience. In particular the function accepts either"," *"," * - a string containing source code"," *   The string is parsed with Recast"," * - a single AST node"," * - a single node path"," * - an array of nodes"," * - an array of node paths"," *"," * @exports jscodeshift"," * @param {Node|NodePath|Array|string} source"," * @param {Object} options Options to pass to Recast when passing source code"," * @return {Collection}"," */","function core(source, options) {","  return typeof source === 'string' ?","    fromSource(source, options) :","    fromAST(source);","}","","/**"," * Returns a collection from a node, node path, array of nodes or array of node"," * paths."," *"," * @ignore"," * @param {Node|NodePath|Array} source"," * @return {Collection}"," */","function fromAST(ast) {","  if (Array.isArray(ast)) {","    if (ast[0] instanceof NodePath || ast.length === 0) {","      return Collection.fromPaths(ast);","    } else if (Node.check(ast[0])) {","      return Collection.fromNodes(ast);","    }","  } else {","    if (ast instanceof NodePath) {","      return Collection.fromPaths([ast]);","    } else if (Node.check(ast)) {","      return Collection.fromNodes([ast]);","    }","  }","  throw new TypeError(","    'Received an unexpected value ' + Object.prototype.toString.call(ast)","  );","}","","function fromSource(source, options) {","  if (!options) {","    options = {};","  }","  if (!options.parser) {","    options.parser = getParser();","  }","  return fromAST(recast.parse(source, options));","}","","/**"," * Utility function to match a node against a pattern."," * @augments core"," * @static"," * @param {Node|NodePath|Object} path"," * @parma {Object} filter"," * @return boolean"," */","function match(path, filter) {","  if (!(path instanceof NodePath)) {","    if (typeof path.get === 'function') {","      path = path.get();","    } else {","      path = {value: path};","    }","  }","  return matchNode(path.value, filter);","}","","const plugins = [];","","/**"," * Utility function for registering plugins."," *"," * Plugins are simple functions that are passed the core jscodeshift instance."," * They should extend jscodeshift by calling `registerMethods`, etc."," * This method guards against repeated registrations (the plugin callback will only be called once)."," *"," * @augments core"," * @static"," * @param {Function} plugin"," */","function use(plugin) {","  if (plugins.indexOf(plugin) === -1) {","    plugins.push(plugin);","    plugin(core);","  }","}","","/**"," * Returns a version of the core jscodeshift function \"bound\" to a specific"," * parser."," *"," * @augments core"," * @static"," */","function withParser(parser) {","  if (typeof parser === 'string') {","    parser = getParser(parser);","  }","","  const newCore = function(source, options) {","    if (options && !options.parser) {","      options.parser = parser;","    } else {","      options = {parser};","    }","    return core(source, options);","  };","","  return enrichCore(newCore, parser);","}","","/**","* The ast-types library","* @external astTypes","* @see {@link https://github.com/benjamn/ast-types}","*/","","function enrichCore(core, parser) {","  // add builders and types to the function for simple access","  Object.assign(core, recast.types.namedTypes);","  Object.assign(core, recast.types.builders);","  core.registerMethods = Collection.registerMethods;","  /**","  * @augments core","  * @type external:astTypes","  */","  core.types = recast.types;","  core.match = match;","  core.template = template(parser);","","  // add mappings and filters to function","  core.filters = {};","  core.mappings = {};","  for (const name in collections) {","    if (collections[name].filters) {","      core.filters[name] = collections[name].filters;","    }","    if (collections[name].mappings) {","      core.mappings[name] = collections[name].mappings;","    }","  }","  core.use = use;","  core.withParser = withParser;","  return core;","}","","module.exports = enrichCore(core, getParser());",""],"l":{"12":1,"14":1,"15":1,"16":1,"17":1,"18":1,"20":1,"21":1,"24":1,"25":3,"44":1,"45":0,"58":1,"59":0,"60":0,"61":0,"62":0,"63":0,"66":0,"67":0,"68":0,"69":0,"72":0,"77":1,"78":0,"79":0,"81":0,"82":0,"84":0,"95":1,"96":0,"97":0,"98":0,"100":0,"103":0,"106":1,"119":1,"120":0,"121":0,"122":0,"133":1,"134":0,"135":0,"138":0,"139":0,"140":0,"142":0,"144":0,"147":0,"156":1,"158":1,"159":1,"160":1,"165":1,"166":1,"167":1,"170":1,"171":1,"172":1,"173":3,"174":2,"176":3,"177":1,"180":1,"181":1,"182":1,"185":1}},"/home/travis/build/npmtest/node-npmtest-jscodeshift/node_modules/jscodeshift/dist/Collection.js":{"path":"/home/travis/build/npmtest/node-npmtest-jscodeshift/node_modules/jscodeshift/dist/Collection.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":1,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":1,"66":1,"67":1,"68":1,"69":1,"70":0,"71":0,"72":1,"73":1,"74":0,"75":0,"76":0,"77":1,"78":0,"79":0,"80":0,"81":0,"82":1,"83":1,"84":6,"85":14,"86":0,"87":14,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":14,"99":1,"100":13,"101":13,"102":13,"103":13,"104":13,"105":13,"106":20,"107":1,"108":13,"109":0,"110":13,"111":1,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":13,"119":13,"120":1,"121":14,"122":1,"123":13,"124":13,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":1,"134":1,"135":1,"136":1,"137":1,"138":1,"139":1,"140":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[1,0],"20":[0,1],"21":[0,14],"22":[0,14],"23":[0,0],"24":[0,0],"25":[1,13],"26":[13,0],"27":[0,13],"28":[0,0],"29":[0,0],"30":[1,13],"31":[13,0],"32":[0,0],"33":[0,0],"34":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":1,"18":0,"19":0,"20":6,"21":20,"22":13,"23":0,"24":14,"25":0,"26":1},"fnMap":{"1":{"name":"(anonymous_1)","line":41,"loc":{"start":{"line":41,"column":13},"end":{"line":41,"column":36}}},"2":{"name":"(anonymous_2)","line":64,"loc":{"start":{"line":64,"column":8},"end":{"line":64,"column":19}}},"3":{"name":"(anonymous_3)","line":74,"loc":{"start":{"line":74,"column":9},"end":{"line":74,"column":20}}},"4":{"name":"(anonymous_4)","line":94,"loc":{"start":{"line":94,"column":5},"end":{"line":94,"column":22}}},"5":{"name":"(anonymous_5)","line":96,"loc":{"start":{"line":96,"column":17},"end":{"line":96,"column":32}}},"6":{"name":"(anonymous_6)","line":117,"loc":{"start":{"line":117,"column":6},"end":{"line":117,"column":9}}},"7":{"name":"(anonymous_7)","line":126,"loc":{"start":{"line":126,"column":12},"end":{"line":126,"column":15}}},"8":{"name":"(anonymous_8)","line":135,"loc":{"start":{"line":135,"column":7},"end":{"line":135,"column":10}}},"9":{"name":"(anonymous_9)","line":139,"loc":{"start":{"line":139,"column":7},"end":{"line":139,"column":10}}},"10":{"name":"(anonymous_10)","line":143,"loc":{"start":{"line":143,"column":8},"end":{"line":143,"column":11}}},"11":{"name":"(anonymous_11)","line":150,"loc":{"start":{"line":150,"column":10},"end":{"line":150,"column":20}}},"12":{"name":"(anonymous_12)","line":172,"loc":{"start":{"line":172,"column":4},"end":{"line":172,"column":12}}},"13":{"name":"(anonymous_13)","line":187,"loc":{"start":{"line":187,"column":5},"end":{"line":187,"column":8}}},"14":{"name":"(anonymous_14)","line":204,"loc":{"start":{"line":204,"column":10},"end":{"line":204,"column":13}}},"15":{"name":"(anonymous_15)","line":214,"loc":{"start":{"line":214,"column":10},"end":{"line":214,"column":17}}},"16":{"name":"_inferTypes","line":225,"loc":{"start":{"line":225,"column":0},"end":{"line":225,"column":28}}},"17":{"name":"_toTypeArray","line":249,"loc":{"start":{"line":249,"column":0},"end":{"line":249,"column":29}}},"18":{"name":"fromPaths","line":278,"loc":{"start":{"line":278,"column":0},"end":{"line":278,"column":40}}},"19":{"name":"fromNodes","line":299,"loc":{"start":{"line":299,"column":0},"end":{"line":299,"column":40}}},"20":{"name":"registerMethods","line":321,"loc":{"start":{"line":321,"column":0},"end":{"line":321,"column":40}}},"21":{"name":"(anonymous_21)","line":356,"loc":{"start":{"line":356,"column":47},"end":{"line":356,"column":63}}},"22":{"name":"installTypedMethod","line":363,"loc":{"start":{"line":363,"column":0},"end":{"line":363,"column":40}}},"23":{"name":"typedMethod","line":370,"loc":{"start":{"line":370,"column":2},"end":{"line":370,"column":25}}},"24":{"name":"hasConflictingRegistration","line":391,"loc":{"start":{"line":391,"column":0},"end":{"line":391,"column":54}}},"25":{"name":"(anonymous_25)","line":412,"loc":{"start":{"line":412,"column":58},"end":{"line":412,"column":74}}},"26":{"name":"setDefaultCollectionType","line":427,"loc":{"start":{"line":427,"column":0},"end":{"line":427,"column":40}}}},"statementMap":{"1":{"start":{"line":13,"column":0},"end":{"line":13,"column":33}},"2":{"start":{"line":14,"column":0},"end":{"line":14,"column":33}},"3":{"start":{"line":15,"column":0},"end":{"line":15,"column":28}},"4":{"start":{"line":17,"column":0},"end":{"line":17,"column":30}},"5":{"start":{"line":18,"column":0},"end":{"line":18,"column":32}},"6":{"start":{"line":19,"column":0},"end":{"line":19,"column":35}},"7":{"start":{"line":20,"column":0},"end":{"line":20,"column":24}},"8":{"start":{"line":42,"column":4},"end":{"line":42,"column":69}},"9":{"start":{"line":43,"column":4},"end":{"line":46,"column":6}},"10":{"start":{"line":44,"column":23},"end":{"line":44,"column":44}},"11":{"start":{"line":47,"column":4},"end":{"line":47,"column":26}},"12":{"start":{"line":48,"column":4},"end":{"line":48,"column":25}},"13":{"start":{"line":49,"column":4},"end":{"line":53,"column":5}},"14":{"start":{"line":50,"column":6},"end":{"line":50,"column":34}},"15":{"start":{"line":51,"column":11},"end":{"line":53,"column":5}},"16":{"start":{"line":52,"column":6},"end":{"line":52,"column":33}},"17":{"start":{"line":54,"column":4},"end":{"line":54,"column":60}},"18":{"start":{"line":65,"column":4},"end":{"line":65,"column":69}},"19":{"start":{"line":75,"column":4},"end":{"line":77,"column":6}},"20":{"start":{"line":76,"column":26},"end":{"line":76,"column":61}},"21":{"start":{"line":78,"column":4},"end":{"line":78,"column":16}},"22":{"start":{"line":95,"column":4},"end":{"line":95,"column":21}},"23":{"start":{"line":96,"column":4},"end":{"line":108,"column":7}},"24":{"start":{"line":98,"column":6},"end":{"line":98,"column":51}},"25":{"start":{"line":99,"column":6},"end":{"line":99,"column":33}},"26":{"start":{"line":99,"column":26},"end":{"line":99,"column":33}},"27":{"start":{"line":100,"column":6},"end":{"line":102,"column":7}},"28":{"start":{"line":101,"column":8},"end":{"line":101,"column":26}},"29":{"start":{"line":103,"column":6},"end":{"line":107,"column":7}},"30":{"start":{"line":104,"column":8},"end":{"line":106,"column":9}},"31":{"start":{"line":105,"column":10},"end":{"line":105,"column":32}},"32":{"start":{"line":109,"column":4},"end":{"line":109,"column":40}},"33":{"start":{"line":118,"column":4},"end":{"line":118,"column":31}},"34":{"start":{"line":127,"column":4},"end":{"line":127,"column":31}},"35":{"start":{"line":136,"column":4},"end":{"line":136,"column":42}},"36":{"start":{"line":136,"column":33},"end":{"line":136,"column":40}},"37":{"start":{"line":140,"column":4},"end":{"line":140,"column":24}},"38":{"start":{"line":144,"column":4},"end":{"line":146,"column":5}},"39":{"start":{"line":145,"column":6},"end":{"line":145,"column":35}},"40":{"start":{"line":147,"column":4},"end":{"line":147,"column":24}},"41":{"start":{"line":151,"column":4},"end":{"line":153,"column":5}},"42":{"start":{"line":152,"column":6},"end":{"line":152,"column":44}},"43":{"start":{"line":154,"column":4},"end":{"line":158,"column":5}},"44":{"start":{"line":155,"column":6},"end":{"line":155,"column":57}},"45":{"start":{"line":157,"column":6},"end":{"line":157,"column":66}},"46":{"start":{"line":157,"column":35},"end":{"line":157,"column":64}},"47":{"start":{"line":173,"column":4},"end":{"line":179,"column":6}},"48":{"start":{"line":188,"column":4},"end":{"line":188,"column":33}},"49":{"start":{"line":189,"column":4},"end":{"line":194,"column":5}},"50":{"start":{"line":190,"column":6},"end":{"line":193,"column":8}},"51":{"start":{"line":195,"column":4},"end":{"line":195,"column":43}},"52":{"start":{"line":205,"column":4},"end":{"line":205,"column":23}},"53":{"start":{"line":215,"column":4},"end":{"line":215,"column":63}},"54":{"start":{"line":225,"column":0},"end":{"line":247,"column":1}},"55":{"start":{"line":226,"column":2},"end":{"line":226,"column":18}},"56":{"start":{"line":228,"column":2},"end":{"line":244,"column":3}},"57":{"start":{"line":229,"column":4},"end":{"line":229,"column":47}},"58":{"start":{"line":230,"column":4},"end":{"line":231,"column":53}},"59":{"start":{"line":231,"column":26},"end":{"line":231,"column":51}},"60":{"start":{"line":233,"column":4},"end":{"line":243,"column":5}},"61":{"start":{"line":234,"column":6},"end":{"line":236,"column":8}},"62":{"start":{"line":239,"column":6},"end":{"line":242,"column":8}},"63":{"start":{"line":241,"column":26},"end":{"line":241,"column":68}},"64":{"start":{"line":246,"column":2},"end":{"line":246,"column":16}},"65":{"start":{"line":249,"column":0},"end":{"line":260,"column":1}},"66":{"start":{"line":250,"column":2},"end":{"line":250,"column":50}},"67":{"start":{"line":251,"column":2},"end":{"line":251,"column":39}},"68":{"start":{"line":251,"column":25},"end":{"line":251,"column":37}},"69":{"start":{"line":252,"column":2},"end":{"line":259,"column":3}},"70":{"start":{"line":253,"column":4},"end":{"line":256,"column":7}},"71":{"start":{"line":255,"column":24},"end":{"line":255,"column":56}},"72":{"start":{"line":258,"column":4},"end":{"line":258,"column":62}},"73":{"start":{"line":278,"column":0},"end":{"line":285,"column":1}},"74":{"start":{"line":279,"column":2},"end":{"line":282,"column":4}},"75":{"start":{"line":280,"column":21},"end":{"line":280,"column":42}},"76":{"start":{"line":284,"column":2},"end":{"line":284,"column":45}},"77":{"start":{"line":299,"column":0},"end":{"line":309,"column":1}},"78":{"start":{"line":300,"column":2},"end":{"line":303,"column":4}},"79":{"start":{"line":301,"column":21},"end":{"line":301,"column":34}},"80":{"start":{"line":304,"column":2},"end":{"line":308,"column":4}},"81":{"start":{"line":305,"column":19},"end":{"line":305,"column":34}},"82":{"start":{"line":311,"column":0},"end":{"line":311,"column":33}},"83":{"start":{"line":321,"column":0},"end":{"line":361,"column":1}},"84":{"start":{"line":322,"column":2},"end":{"line":360,"column":3}},"85":{"start":{"line":323,"column":4},"end":{"line":325,"column":5}},"86":{"start":{"line":324,"column":6},"end":{"line":324,"column":13}},"87":{"start":{"line":326,"column":4},"end":{"line":346,"column":5}},"88":{"start":{"line":327,"column":6},"end":{"line":327,"column":142}},"89":{"start":{"line":329,"column":6},"end":{"line":333,"column":7}},"90":{"start":{"line":330,"column":8},"end":{"line":330,"column":43}},"91":{"start":{"line":332,"column":8},"end":{"line":332,"column":32}},"92":{"start":{"line":335,"column":6},"end":{"line":335,"column":72}},"93":{"start":{"line":337,"column":6},"end":{"line":337,"column":74}},"94":{"start":{"line":339,"column":6},"end":{"line":343,"column":7}},"95":{"start":{"line":340,"column":8},"end":{"line":340,"column":75}},"96":{"start":{"line":342,"column":8},"end":{"line":342,"column":33}},"97":{"start":{"line":345,"column":6},"end":{"line":345,"column":23}},"98":{"start":{"line":347,"column":4},"end":{"line":359,"column":5}},"99":{"start":{"line":348,"column":6},"end":{"line":348,"column":44}},"100":{"start":{"line":350,"column":6},"end":{"line":350,"column":29}},"101":{"start":{"line":351,"column":6},"end":{"line":353,"column":7}},"102":{"start":{"line":352,"column":8},"end":{"line":352,"column":39}},"103":{"start":{"line":354,"column":6},"end":{"line":354,"column":61}},"104":{"start":{"line":355,"column":6},"end":{"line":355,"column":48}},"105":{"start":{"line":356,"column":6},"end":{"line":358,"column":9}},"106":{"start":{"line":357,"column":8},"end":{"line":357,"column":36}},"107":{"start":{"line":363,"column":0},"end":{"line":389,"column":1}},"108":{"start":{"line":364,"column":2},"end":{"line":366,"column":3}},"109":{"start":{"line":365,"column":4},"end":{"line":365,"column":83}},"110":{"start":{"line":368,"column":2},"end":{"line":368,"column":27}},"111":{"start":{"line":370,"column":2},"end":{"line":384,"column":3}},"112":{"start":{"line":371,"column":4},"end":{"line":371,"column":45}},"113":{"start":{"line":373,"column":4},"end":{"line":378,"column":5}},"114":{"start":{"line":374,"column":6},"end":{"line":374,"column":35}},"115":{"start":{"line":375,"column":6},"end":{"line":377,"column":7}},"116":{"start":{"line":376,"column":8},"end":{"line":376,"column":65}},"117":{"start":{"line":380,"column":4},"end":{"line":383,"column":6}},"118":{"start":{"line":386,"column":2},"end":{"line":386,"column":49}},"119":{"start":{"line":388,"column":2},"end":{"line":388,"column":32}},"120":{"start":{"line":391,"column":0},"end":{"line":415,"column":1}},"121":{"start":{"line":392,"column":2},"end":{"line":394,"column":3}},"122":{"start":{"line":393,"column":4},"end":{"line":393,"column":42}},"123":{"start":{"line":396,"column":2},"end":{"line":398,"column":3}},"124":{"start":{"line":397,"column":4},"end":{"line":397,"column":17}},"125":{"start":{"line":400,"column":2},"end":{"line":400,"column":78}},"126":{"start":{"line":402,"column":2},"end":{"line":404,"column":3}},"127":{"start":{"line":403,"column":4},"end":{"line":403,"column":16}},"128":{"start":{"line":406,"column":2},"end":{"line":406,"column":25}},"129":{"start":{"line":408,"column":2},"end":{"line":410,"column":3}},"130":{"start":{"line":409,"column":4},"end":{"line":409,"column":16}},"131":{"start":{"line":412,"column":2},"end":{"line":414,"column":5}},"132":{"start":{"line":413,"column":4},"end":{"line":413,"column":33}},"133":{"start":{"line":417,"column":0},"end":{"line":417,"column":22}},"134":{"start":{"line":427,"column":0},"end":{"line":429,"column":1}},"135":{"start":{"line":428,"column":2},"end":{"line":428,"column":36}},"136":{"start":{"line":431,"column":0},"end":{"line":431,"column":30}},"137":{"start":{"line":432,"column":0},"end":{"line":432,"column":30}},"138":{"start":{"line":433,"column":0},"end":{"line":433,"column":42}},"139":{"start":{"line":434,"column":0},"end":{"line":434,"column":64}},"140":{"start":{"line":435,"column":0},"end":{"line":435,"column":60}}},"branchMap":{"1":{"line":49,"type":"if","locations":[{"start":{"line":49,"column":4},"end":{"line":49,"column":4}},{"start":{"line":49,"column":4},"end":{"line":49,"column":4}}]},"2":{"line":49,"type":"binary-expr","locations":[{"start":{"line":49,"column":8},"end":{"line":49,"column":13}},{"start":{"line":49,"column":17},"end":{"line":49,"column":38}}]},"3":{"line":51,"type":"if","locations":[{"start":{"line":51,"column":11},"end":{"line":51,"column":11}},{"start":{"line":51,"column":11},"end":{"line":51,"column":11}}]},"4":{"line":51,"type":"binary-expr","locations":[{"start":{"line":51,"column":15},"end":{"line":51,"column":21}},{"start":{"line":51,"column":25},"end":{"line":51,"column":45}},{"start":{"line":51,"column":49},"end":{"line":51,"column":67}}]},"5":{"line":54,"type":"cond-expr","locations":[{"start":{"line":54,"column":39},"end":{"line":54,"column":51}},{"start":{"line":54,"column":54},"end":{"line":54,"column":59}}]},"6":{"line":99,"type":"if","locations":[{"start":{"line":99,"column":6},"end":{"line":99,"column":6}},{"start":{"line":99,"column":6},"end":{"line":99,"column":6}}]},"7":{"line":100,"type":"if","locations":[{"start":{"line":100,"column":6},"end":{"line":100,"column":6}},{"start":{"line":100,"column":6},"end":{"line":100,"column":6}}]},"8":{"line":104,"type":"if","locations":[{"start":{"line":104,"column":8},"end":{"line":104,"column":8}},{"start":{"line":104,"column":8},"end":{"line":104,"column":8}}]},"9":{"line":144,"type":"if","locations":[{"start":{"line":144,"column":4},"end":{"line":144,"column":4}},{"start":{"line":144,"column":4},"end":{"line":144,"column":4}}]},"10":{"line":151,"type":"if","locations":[{"start":{"line":151,"column":4},"end":{"line":151,"column":4}},{"start":{"line":151,"column":4},"end":{"line":151,"column":4}}]},"11":{"line":154,"type":"if","locations":[{"start":{"line":154,"column":4},"end":{"line":154,"column":4}},{"start":{"line":154,"column":4},"end":{"line":154,"column":4}}]},"12":{"line":176,"type":"cond-expr","locations":[{"start":{"line":176,"column":23},"end":{"line":176,"column":32}},{"start":{"line":176,"column":35},"end":{"line":176,"column":44}}]},"13":{"line":189,"type":"if","locations":[{"start":{"line":189,"column":4},"end":{"line":189,"column":4}},{"start":{"line":189,"column":4},"end":{"line":189,"column":4}}]},"14":{"line":215,"type":"binary-expr","locations":[{"start":{"line":215,"column":11},"end":{"line":215,"column":17}},{"start":{"line":215,"column":21},"end":{"line":215,"column":62}}]},"15":{"line":228,"type":"if","locations":[{"start":{"line":228,"column":2},"end":{"line":228,"column":2}},{"start":{"line":228,"column":2},"end":{"line":228,"column":2}}]},"16":{"line":228,"type":"binary-expr","locations":[{"start":{"line":228,"column":6},"end":{"line":228,"column":22}},{"start":{"line":228,"column":26},"end":{"line":228,"column":51}}]},"17":{"line":230,"type":"binary-expr","locations":[{"start":{"line":230,"column":21},"end":{"line":230,"column":39}},{"start":{"line":231,"column":6},"end":{"line":231,"column":52}}]},"18":{"line":233,"type":"if","locations":[{"start":{"line":233,"column":4},"end":{"line":233,"column":4}},{"start":{"line":233,"column":4},"end":{"line":233,"column":4}}]},"19":{"line":250,"type":"cond-expr","locations":[{"start":{"line":250,"column":34},"end":{"line":250,"column":41}},{"start":{"line":250,"column":44},"end":{"line":250,"column":49}}]},"20":{"line":252,"type":"if","locations":[{"start":{"line":252,"column":2},"end":{"line":252,"column":2}},{"start":{"line":252,"column":2},"end":{"line":252,"column":2}}]},"21":{"line":323,"type":"if","locations":[{"start":{"line":323,"column":4},"end":{"line":323,"column":4}},{"start":{"line":323,"column":4},"end":{"line":323,"column":4}}]},"22":{"line":326,"type":"if","locations":[{"start":{"line":326,"column":4},"end":{"line":326,"column":4}},{"start":{"line":326,"column":4},"end":{"line":326,"column":4}}]},"23":{"line":329,"type":"if","locations":[{"start":{"line":329,"column":6},"end":{"line":329,"column":6}},{"start":{"line":329,"column":6},"end":{"line":329,"column":6}}]},"24":{"line":339,"type":"if","locations":[{"start":{"line":339,"column":6},"end":{"line":339,"column":6}},{"start":{"line":339,"column":6},"end":{"line":339,"column":6}}]},"25":{"line":347,"type":"if","locations":[{"start":{"line":347,"column":4},"end":{"line":347,"column":4}},{"start":{"line":347,"column":4},"end":{"line":347,"column":4}}]},"26":{"line":351,"type":"if","locations":[{"start":{"line":351,"column":6},"end":{"line":351,"column":6}},{"start":{"line":351,"column":6},"end":{"line":351,"column":6}}]},"27":{"line":364,"type":"if","locations":[{"start":{"line":364,"column":2},"end":{"line":364,"column":2}},{"start":{"line":364,"column":2},"end":{"line":364,"column":2}}]},"28":{"line":375,"type":"if","locations":[{"start":{"line":375,"column":6},"end":{"line":375,"column":6}},{"start":{"line":375,"column":6},"end":{"line":375,"column":6}}]},"29":{"line":375,"type":"binary-expr","locations":[{"start":{"line":375,"column":10},"end":{"line":375,"column":36}},{"start":{"line":375,"column":40},"end":{"line":375,"column":66}}]},"30":{"line":392,"type":"if","locations":[{"start":{"line":392,"column":2},"end":{"line":392,"column":2}},{"start":{"line":392,"column":2},"end":{"line":392,"column":2}}]},"31":{"line":396,"type":"if","locations":[{"start":{"line":396,"column":2},"end":{"line":396,"column":2}},{"start":{"line":396,"column":2},"end":{"line":396,"column":2}}]},"32":{"line":400,"type":"binary-expr","locations":[{"start":{"line":400,"column":24},"end":{"line":400,"column":39}},{"start":{"line":400,"column":43},"end":{"line":400,"column":77}}]},"33":{"line":402,"type":"if","locations":[{"start":{"line":402,"column":2},"end":{"line":402,"column":2}},{"start":{"line":402,"column":2},"end":{"line":402,"column":2}}]},"34":{"line":408,"type":"if","locations":[{"start":{"line":408,"column":2},"end":{"line":408,"column":2}},{"start":{"line":408,"column":2},"end":{"line":408,"column":2}}]}},"code":["/*"," *  Copyright (c) 2015-present, Facebook, Inc."," *  All rights reserved."," *"," *  This source code is licensed under the BSD-style license found in the"," *  LICENSE file in the root directory of this source tree. An additional grant"," *  of patent rights can be found in the PATENTS file in the same directory."," *"," */","","'use strict';","","const assert = require('assert');","const recast = require('recast');","const _ = require('lodash');","","const astTypes = recast.types;","var types = astTypes.namedTypes;","const NodePath = astTypes.NodePath;","const Node = types.Node;","","/**"," * This represents a generic collection of node paths. It only has a generic"," * API to access and process the elements of the list. It doesn't know anything"," * about AST types."," *"," * @mixes traversalMethods"," * @mixes mutationMethods"," * @mixes transformMethods"," * @mixes globalMethods"," */","class Collection {","","  /**","   * @param {Array} paths An array of AST paths","   * @param {Collection} parent A parent collection","   * @param {Array} types An array of types all the paths in the collection","   *  have in common. If not passed, it will be inferred from the paths.","   * @return {Collection}","   */","  constructor(paths, parent, types) {","    assert.ok(Array.isArray(paths), 'Collection is passed an array');","    assert.ok(","      paths.every(p => p instanceof NodePath),","      'Array contains only paths'","    );","    this._parent = parent;","    this.__paths = paths;","    if (types && !Array.isArray(types)) {","      types = _toTypeArray(types);","    } else if (!types || Array.isArray(types) && types.length === 0) {","      types = _inferTypes(paths);","    }","    this._types = types.length === 0 ? _defaultType : types;","  }","","  /**","   * Returns a new collection containing the nodes for which the callback","   * returns true.","   *","   * @param {function} callback","   * @return {Collection}","   */","  filter(callback) {","    return new this.constructor(this.__paths.filter(callback), this);","  }","","  /**","   * Executes callback for each node/path in the collection.","   *","   * @param {function} callback","   * @return {Collection} The collection itself","   */","  forEach(callback) {","    this.__paths.forEach(","      (path, i, paths) => callback.call(path, path, i, paths)","    );","    return this;","  }","","  /**","   * Executes the callback for every path in the collection and returns a new","   * collection from the return values (which must be paths).","   *","   * The callback can return null to indicate to exclude the element from the","   * new collection.","   *","   * If an array is returned, the array will be flattened into the result","   * collection.","   *","   * @param {function} callback","   * @param {Type} type Force the new collection to be of a specific type","   */","  map(callback, type) {","    const paths = [];","    this.forEach(function(path) {","      /*jshint eqnull:true*/","      let result = callback.apply(path, arguments);","      if (result == null) return;","      if (!Array.isArray(result)) {","        result = [result];","      }","      for (let i = 0; i < result.length; i++) {","        if (paths.indexOf(result[i]) === -1) {","          paths.push(result[i]);","        }","      }","    });","    return fromPaths(paths, this, type);","  }","","  /**","   * Returns the number of elements in this collection.","   *","   * @return {number}","   */","  size() {","    return this.__paths.length;","  }","","  /**","   * Returns the number of elements in this collection.","   *","   * @return {number}","   */","  get length() {","    return this.__paths.length;","  }","","  /**","   * Returns an array of AST nodes in this collection.","   *","   * @return {Array}","   */","  nodes() {","    return this.__paths.map(p => p.value);","  }","","  paths() {","    return this.__paths;","  }","","  getAST() {","    if (this._parent) {","      return this._parent.getAST();","    }","    return this.__paths;","  }","","  toSource(options) {","    if (this._parent) {","      return this._parent.toSource(options);","    }","    if (this.__paths.length === 1) {","      return recast.print(this.__paths[0], options).code;","    } else {","      return this.__paths.map(p => recast.print(p, options).code);","    }","  }","","  /**","   * Returns a new collection containing only the element at position index.","   *","   * In case of a negative index, the element is taken from the end:","   *","   *   .at(0)  - first element","   *   .at(-1) - last element","   *","   * @param {number} index","   * @return {Collection}","   */","  at(index) {","    return fromPaths(","      this.__paths.slice(","        index,","        index === -1 ? undefined : index + 1","      ),","      this","    );","  }","","  /**","   * Proxies to NodePath#get of the first path.","   *","   * @param {string|number} ...fields","   */","  get() {","    const path = this.__paths[0];","    if (!path) {","      throw Error(","        'You cannot call \"get\" on a collection with no paths. ' +","        'Instead, check the \"length\" property first to verify at least 1 path exists.'","      );","    }","    return path.get.apply(path, arguments);","  }","","  /**","   * Returns the type(s) of the collection. This is only used for unit tests,","   * I don't think other consumers would need it.","   *","   * @return {Array<string>}","   */","  getTypes() {","    return this._types;","  }","","  /**","   * Returns true if this collection has the type 'type'.","   *","   * @param {Type} type","   * @return {boolean}","   */","  isOfType(type) {","    return !!type && this._types.indexOf(type.toString()) > -1;","  }","}","","/**"," * Given a set of paths, this infers the common types of all paths."," * @private"," * @param {Array} paths An array of paths."," * @return {Type} type An AST type"," */","function _inferTypes(paths) {","  let _types = [];","","  if (paths.length > 0 && Node.check(paths[0].node)) {","    const nodeType = types[paths[0].node.type];","    const sameType = paths.length === 1 ||","      paths.every(path => nodeType.check(path.node));","","    if (sameType) {","      _types = [nodeType.toString()].concat(","        astTypes.getSupertypeNames(nodeType.toString())","      );","    } else {","      // try to find a common type","      _types = _.intersection.apply(","        null,","        paths.map(path => astTypes.getSupertypeNames(path.node.type))","      );","    }","  }","","  return _types;","}","","function _toTypeArray(value) {","  value = !Array.isArray(value) ? [value] : value;","  value = value.map(v => v.toString());","  if (value.length > 1) {","    return _.union(value, _.intersection.apply(","      null,","      value.map(type => astTypes.getSupertypeNames(type))","    ));","  } else {","    return value.concat(astTypes.getSupertypeNames(value[0]));","  }","}","","/**"," * Creates a new collection from an array of node paths."," *"," * If type is passed, it will create a typed collection if such a collection"," * exists. The nodes or path values must be of the same type."," *"," * Otherwise it will try to infer the type from the path list. If every"," * element has the same type, a typed collection is created (if it exists),"," * otherwise, a generic collection will be created."," *"," * @ignore"," * @param {Array} paths An array of paths"," * @param {Collection} parent A parent collection"," * @param {Type} type An AST type"," * @return {Collection}"," */","function fromPaths(paths, parent, type) {","  assert.ok(","    paths.every(n => n instanceof NodePath),","    'Every element in the array should be a NodePath'","  );","","  return new Collection(paths, parent, type);","}","","/**"," * Creates a new collection from an array of nodes. This is a convenience"," * method which converts the nodes to node paths first and calls"," *"," *    Collections.fromPaths(paths, parent, type)"," *"," * @ignore"," * @param {Array} nodes An array of AST nodes"," * @param {Collection} parent A parent collection"," * @param {Type} type An AST type"," * @return {Collection}"," */","function fromNodes(nodes, parent, type) {","  assert.ok(","    nodes.every(n => Node.check(n)),","    'Every element in the array should be a Node'","  );","  return fromPaths(","    nodes.map(n => new NodePath(n)),","    parent,","    type","  );","}","","const CPt = Collection.prototype;","","/**"," * This function adds the provided methods to the prototype of the corresponding"," * typed collection. If no type is passed, the methods are added to"," * Collection.prototype and are available for all collections."," *"," * @param {Object} methods Methods to add to the prototype"," * @param {Type=} type Optional type to add the methods to"," */","function registerMethods(methods, type) {","  for (const methodName in methods) {","    if (!methods.hasOwnProperty(methodName)) {","      return;","    }","    if (hasConflictingRegistration(methodName, type)) {","      let msg = `There is a conflicting registration for method with name \"${methodName}\".\\nYou tried to register an additional method with `;","","      if (type) {","        msg += `type \"${type.toString()}\".`","      } else {","        msg += 'universal type.'","      }","","      msg += '\\nThere are existing registrations for that method with ';","","      const conflictingRegistrations = CPt[methodName].typedRegistrations;","","      if (conflictingRegistrations) {","        msg += `type ${Object.keys(conflictingRegistrations).join(', ')}.`;","      } else {","        msg += 'universal type.';","      }","","      throw Error(msg);","    }","    if (!type) {","      CPt[methodName] = methods[methodName];","    } else {","      type = type.toString();","      if (!CPt.hasOwnProperty(methodName)) {","        installTypedMethod(methodName);","      }","      var registrations = CPt[methodName].typedRegistrations;","      registrations[type] = methods[methodName];","      astTypes.getSupertypeNames(type).forEach(function (name) {","        registrations[name] = false;","      });","    }","  }","}","","function installTypedMethod(methodName) {","  if (CPt.hasOwnProperty(methodName)) {","    throw new Error(`Internal Error: \"${methodName}\" method is already installed`);","  }","","  const registrations = {};","","  function typedMethod() {","    const types = Object.keys(registrations);","","    for (let i = 0; i < types.length; i++) {","      const currentType = types[i];","      if (registrations[currentType] && this.isOfType(currentType)) {","        return registrations[currentType].apply(this, arguments);","      }","    }","","    throw Error(","      `You have a collection of type [${this.getTypes()}]. ` +","      `\"${methodName}\" is only defined for one of [${types.join('|')}].`","    );","  }","","  typedMethod.typedRegistrations = registrations;","","  CPt[methodName] = typedMethod;","}","","function hasConflictingRegistration(methodName, type) {","  if (!type) {","    return CPt.hasOwnProperty(methodName);","  }","","  if (!CPt.hasOwnProperty(methodName)) {","    return false;","  }","","  const registrations = CPt[methodName] && CPt[methodName].typedRegistrations;","","  if (!registrations) {","    return true;","  }","","  type = type.toString();","","  if (registrations.hasOwnProperty(type)) {","    return true;","  }","","  return astTypes.getSupertypeNames(type.toString()).some(function (name) {","    return !!registrations[name];","  });","}","","var _defaultType = [];","","/**"," * Sets the default collection type. In case a collection is created form an"," * empty set of paths and no type is specified, we return a collection of this"," * type."," *"," * @ignore"," * @param {Type} type"," */","function setDefaultCollectionType(type) {","  _defaultType = _toTypeArray(type);","}","","exports.fromPaths = fromPaths;","exports.fromNodes = fromNodes;","exports.registerMethods = registerMethods;","exports.hasConflictingRegistration = hasConflictingRegistration;","exports.setDefaultCollectionType = setDefaultCollectionType;",""],"l":{"13":1,"14":1,"15":1,"17":1,"18":1,"19":1,"20":1,"42":0,"43":0,"44":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"54":0,"65":0,"75":0,"76":0,"78":0,"95":0,"96":0,"98":0,"99":0,"100":0,"101":0,"103":0,"104":0,"105":0,"109":0,"118":0,"127":0,"136":0,"140":0,"144":0,"145":0,"147":0,"151":0,"152":0,"154":0,"155":0,"157":0,"173":0,"188":0,"189":0,"190":0,"195":0,"205":0,"215":0,"225":1,"226":0,"228":0,"229":0,"230":0,"231":0,"233":0,"234":0,"239":0,"241":0,"246":0,"249":1,"250":1,"251":1,"252":1,"253":0,"255":0,"258":1,"278":1,"279":0,"280":0,"284":0,"299":1,"300":0,"301":0,"304":0,"305":0,"311":1,"321":1,"322":6,"323":14,"324":0,"326":14,"327":0,"329":0,"330":0,"332":0,"335":0,"337":0,"339":0,"340":0,"342":0,"345":0,"347":14,"348":1,"350":13,"351":13,"352":13,"354":13,"355":13,"356":13,"357":20,"363":1,"364":13,"365":0,"368":13,"370":1,"371":0,"373":0,"374":0,"375":0,"376":0,"380":0,"386":13,"388":13,"391":1,"392":14,"393":1,"396":13,"397":13,"400":0,"402":0,"403":0,"406":0,"408":0,"409":0,"412":0,"413":0,"417":1,"427":1,"428":1,"431":1,"432":1,"433":1,"434":1,"435":1}},"/home/travis/build/npmtest/node-npmtest-jscodeshift/node_modules/jscodeshift/dist/collections/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-jscodeshift/node_modules/jscodeshift/dist/collections/index.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":11,"column":0},"end":{"line":15,"column":2}}},"branchMap":{},"code":["/*"," *  Copyright (c) 2015-present, Facebook, Inc."," *  All rights reserved."," *"," *  This source code is licensed under the BSD-style license found in the"," *  LICENSE file in the root directory of this source tree. An additional grant"," *  of patent rights can be found in the PATENTS file in the same directory."," *"," */","","module.exports = {","  Node: require('./Node'),","  JSXElement: require('./JSXElement'),","  VariableDeclarator: require('./VariableDeclarator'),","};",""],"l":{"11":1}},"/home/travis/build/npmtest/node-npmtest-jscodeshift/node_modules/jscodeshift/dist/collections/Node.js":{"path":"/home/travis/build/npmtest/node-npmtest-jscodeshift/node_modules/jscodeshift/dist/collections/Node.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":0,"9":0,"10":0,"11":1,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":1,"47":0,"48":1,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":1,"61":1,"62":1,"63":1,"64":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":1},"fnMap":{"1":{"name":"(anonymous_1)","line":34,"loc":{"start":{"line":34,"column":8},"end":{"line":34,"column":31}}},"2":{"name":"visit","line":39,"loc":{"start":{"line":39,"column":4},"end":{"line":39,"column":25}}},"3":{"name":"(anonymous_3)","line":46,"loc":{"start":{"line":46,"column":25},"end":{"line":46,"column":40}}},"4":{"name":"(anonymous_4)","line":48,"loc":{"start":{"line":48,"column":35},"end":{"line":48,"column":50}}},"5":{"name":"(anonymous_5)","line":67,"loc":{"start":{"line":67,"column":16},"end":{"line":67,"column":27}}},"6":{"name":"(anonymous_6)","line":78,"loc":{"start":{"line":78,"column":11},"end":{"line":78,"column":34}}},"7":{"name":"(anonymous_7)","line":79,"loc":{"start":{"line":79,"column":20},"end":{"line":79,"column":35}}},"8":{"name":"(anonymous_8)","line":105,"loc":{"start":{"line":105,"column":26},"end":{"line":105,"column":47}}},"9":{"name":"(anonymous_9)","line":106,"loc":{"start":{"line":106,"column":20},"end":{"line":106,"column":35}}},"10":{"name":"toArray","line":125,"loc":{"start":{"line":125,"column":0},"end":{"line":125,"column":24}}},"11":{"name":"(anonymous_11)","line":141,"loc":{"start":{"line":141,"column":15},"end":{"line":141,"column":31}}},"12":{"name":"(anonymous_12)","line":142,"loc":{"start":{"line":142,"column":24},"end":{"line":142,"column":42}}},"13":{"name":"(anonymous_13)","line":155,"loc":{"start":{"line":155,"column":16},"end":{"line":155,"column":33}}},"14":{"name":"(anonymous_14)","line":156,"loc":{"start":{"line":156,"column":24},"end":{"line":156,"column":42}}},"15":{"name":"(anonymous_15)","line":169,"loc":{"start":{"line":169,"column":15},"end":{"line":169,"column":32}}},"16":{"name":"(anonymous_16)","line":170,"loc":{"start":{"line":170,"column":24},"end":{"line":170,"column":42}}},"17":{"name":"(anonymous_17)","line":177,"loc":{"start":{"line":177,"column":10},"end":{"line":177,"column":21}}},"18":{"name":"register","line":183,"loc":{"start":{"line":183,"column":0},"end":{"line":183,"column":20}}}},"statementMap":{"1":{"start":{"line":13,"column":0},"end":{"line":13,"column":28}},"2":{"start":{"line":14,"column":0},"end":{"line":14,"column":44}},"3":{"start":{"line":16,"column":0},"end":{"line":16,"column":42}},"4":{"start":{"line":17,"column":0},"end":{"line":17,"column":33}},"5":{"start":{"line":19,"column":0},"end":{"line":19,"column":42}},"6":{"start":{"line":20,"column":0},"end":{"line":20,"column":36}},"7":{"start":{"line":25,"column":0},"end":{"line":123,"column":2}},"8":{"start":{"line":35,"column":4},"end":{"line":35,"column":21}},"9":{"start":{"line":36,"column":4},"end":{"line":36,"column":45}},"10":{"start":{"line":38,"column":4},"end":{"line":38,"column":23}},"11":{"start":{"line":39,"column":4},"end":{"line":45,"column":5}},"12":{"start":{"line":41,"column":6},"end":{"line":43,"column":7}},"13":{"start":{"line":42,"column":8},"end":{"line":42,"column":25}},"14":{"start":{"line":44,"column":6},"end":{"line":44,"column":26}},"15":{"start":{"line":46,"column":4},"end":{"line":56,"column":13}},"16":{"start":{"line":47,"column":6},"end":{"line":47,"column":24}},"17":{"start":{"line":48,"column":6},"end":{"line":54,"column":8}},"18":{"start":{"line":49,"column":8},"end":{"line":53,"column":9}},"19":{"start":{"line":50,"column":10},"end":{"line":50,"column":30}},"20":{"start":{"line":52,"column":10},"end":{"line":52,"column":40}},"21":{"start":{"line":55,"column":6},"end":{"line":55,"column":31}},"22":{"start":{"line":58,"column":4},"end":{"line":58,"column":51}},"23":{"start":{"line":68,"column":4},"end":{"line":68,"column":59}},"24":{"start":{"line":68,"column":28},"end":{"line":68,"column":57}},"25":{"start":{"line":79,"column":4},"end":{"line":91,"column":7}},"26":{"start":{"line":80,"column":6},"end":{"line":80,"column":31}},"27":{"start":{"line":81,"column":6},"end":{"line":89,"column":7}},"28":{"start":{"line":88,"column":8},"end":{"line":88,"column":31}},"29":{"start":{"line":90,"column":6},"end":{"line":90,"column":28}},"30":{"start":{"line":106,"column":4},"end":{"line":121,"column":33}},"31":{"start":{"line":108,"column":6},"end":{"line":108,"column":29}},"32":{"start":{"line":109,"column":6},"end":{"line":109,"column":25}},"33":{"start":{"line":109,"column":18},"end":{"line":109,"column":25}},"34":{"start":{"line":110,"column":6},"end":{"line":110,"column":53}},"35":{"start":{"line":111,"column":6},"end":{"line":111,"column":24}},"36":{"start":{"line":111,"column":17},"end":{"line":111,"column":24}},"37":{"start":{"line":112,"column":6},"end":{"line":112,"column":33}},"38":{"start":{"line":113,"column":6},"end":{"line":113,"column":25}},"39":{"start":{"line":113,"column":18},"end":{"line":113,"column":25}},"40":{"start":{"line":114,"column":6},"end":{"line":114,"column":49}},"41":{"start":{"line":115,"column":6},"end":{"line":115,"column":28}},"42":{"start":{"line":115,"column":21},"end":{"line":115,"column":28}},"43":{"start":{"line":116,"column":6},"end":{"line":117,"column":43}},"44":{"start":{"line":118,"column":6},"end":{"line":120,"column":7}},"45":{"start":{"line":119,"column":8},"end":{"line":119,"column":31}},"46":{"start":{"line":125,"column":0},"end":{"line":127,"column":1}},"47":{"start":{"line":126,"column":2},"end":{"line":126,"column":48}},"48":{"start":{"line":132,"column":0},"end":{"line":181,"column":2}},"49":{"start":{"line":142,"column":4},"end":{"line":146,"column":7}},"50":{"start":{"line":143,"column":6},"end":{"line":144,"column":74}},"51":{"start":{"line":145,"column":6},"end":{"line":145,"column":50}},"52":{"start":{"line":156,"column":4},"end":{"line":160,"column":7}},"53":{"start":{"line":157,"column":6},"end":{"line":158,"column":77}},"54":{"start":{"line":159,"column":6},"end":{"line":159,"column":55}},"55":{"start":{"line":170,"column":4},"end":{"line":174,"column":7}},"56":{"start":{"line":171,"column":6},"end":{"line":172,"column":77}},"57":{"start":{"line":173,"column":6},"end":{"line":173,"column":54}},"58":{"start":{"line":178,"column":4},"end":{"line":178,"column":46}},"59":{"start":{"line":178,"column":32},"end":{"line":178,"column":44}},"60":{"start":{"line":183,"column":0},"end":{"line":187,"column":1}},"61":{"start":{"line":184,"column":2},"end":{"line":184,"column":53}},"62":{"start":{"line":185,"column":2},"end":{"line":185,"column":52}},"63":{"start":{"line":186,"column":2},"end":{"line":186,"column":44}},"64":{"start":{"line":189,"column":0},"end":{"line":189,"column":36}}},"branchMap":{"1":{"line":41,"type":"if","locations":[{"start":{"line":41,"column":6},"end":{"line":41,"column":6}},{"start":{"line":41,"column":6},"end":{"line":41,"column":6}}]},"2":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":10},"end":{"line":41,"column":17}},{"start":{"line":41,"column":21},"end":{"line":41,"column":50}}]},"3":{"line":49,"type":"if","locations":[{"start":{"line":49,"column":8},"end":{"line":49,"column":8}},{"start":{"line":49,"column":8},"end":{"line":49,"column":8}}]},"4":{"line":68,"type":"binary-expr","locations":[{"start":{"line":68,"column":28},"end":{"line":68,"column":38}},{"start":{"line":68,"column":42},"end":{"line":68,"column":57}}]},"5":{"line":82,"type":"binary-expr","locations":[{"start":{"line":82,"column":8},"end":{"line":82,"column":14}},{"start":{"line":83,"column":8},"end":{"line":86,"column":9}}]},"6":{"line":84,"type":"binary-expr","locations":[{"start":{"line":84,"column":10},"end":{"line":84,"column":34}},{"start":{"line":85,"column":11},"end":{"line":85,"column":18}},{"start":{"line":85,"column":22},"end":{"line":85,"column":53}}]},"7":{"line":90,"type":"binary-expr","locations":[{"start":{"line":90,"column":13},"end":{"line":90,"column":19}},{"start":{"line":90,"column":23},"end":{"line":90,"column":27}}]},"8":{"line":109,"type":"if","locations":[{"start":{"line":109,"column":6},"end":{"line":109,"column":6}},{"start":{"line":109,"column":6},"end":{"line":109,"column":6}}]},"9":{"line":111,"type":"if","locations":[{"start":{"line":111,"column":6},"end":{"line":111,"column":6}},{"start":{"line":111,"column":6},"end":{"line":111,"column":6}}]},"10":{"line":113,"type":"if","locations":[{"start":{"line":113,"column":6},"end":{"line":113,"column":6}},{"start":{"line":113,"column":6},"end":{"line":113,"column":6}}]},"11":{"line":115,"type":"if","locations":[{"start":{"line":115,"column":6},"end":{"line":115,"column":6}},{"start":{"line":115,"column":6},"end":{"line":115,"column":6}}]},"12":{"line":118,"type":"if","locations":[{"start":{"line":118,"column":6},"end":{"line":118,"column":6}},{"start":{"line":118,"column":6},"end":{"line":118,"column":6}}]},"13":{"line":126,"type":"cond-expr","locations":[{"start":{"line":126,"column":32},"end":{"line":126,"column":37}},{"start":{"line":126,"column":40},"end":{"line":126,"column":47}}]},"14":{"line":144,"type":"cond-expr","locations":[{"start":{"line":144,"column":40},"end":{"line":144,"column":65}},{"start":{"line":144,"column":68},"end":{"line":144,"column":73}}]},"15":{"line":158,"type":"cond-expr","locations":[{"start":{"line":158,"column":41},"end":{"line":158,"column":67}},{"start":{"line":158,"column":70},"end":{"line":158,"column":76}}]},"16":{"line":172,"type":"cond-expr","locations":[{"start":{"line":172,"column":41},"end":{"line":172,"column":67}},{"start":{"line":172,"column":70},"end":{"line":172,"column":76}}]}},"code":["/*"," *  Copyright (c) 2015-present, Facebook, Inc."," *  All rights reserved."," *"," *  This source code is licensed under the BSD-style license found in the"," *  LICENSE file in the root directory of this source tree. An additional grant"," *  of patent rights can be found in the PATENTS file in the same directory."," *"," */","","'use strict';","","const _ = require('lodash');","const Collection = require('../Collection');","","const matchNode = require('../matchNode');","const recast = require('recast');","","const Node = recast.types.namedTypes.Node;","var types = recast.types.namedTypes;","","/**","* @mixin","*/","const traversalMethods = {","","  /**","   * Find nodes of a specific type within the nodes of this collection.","   *","   * @param {type}","   * @param {filter}","   * @return {Collection}","   */","  find: function(type, filter) {","    const paths = [];","    const visitorMethodName = 'visit' + type;","","    const visitor = {};","    function visit(path) {","      /*jshint validthis:true */","      if (!filter || matchNode(path.value, filter)) {","        paths.push(path);","      }","      this.traverse(path);","    }","    this.__paths.forEach(function(p, i) {","      const self = this;","      visitor[visitorMethodName] = function(path) {","        if (self.__paths[i] === path) {","          this.traverse(path);","        } else {","          return visit.call(this, path);","        }","      };","      recast.visit(p, visitor);","    }, this);","","    return Collection.fromPaths(paths, this, type);","  },","","  /**","   * Returns a collection containing the paths that create the scope of the","   * currently selected paths. Dedupes the paths.","   *","   * @return {Collection}","   */","  closestScope: function() {","    return this.map(path => path.scope && path.scope.path);","  },","","  /**","   * Traverse the AST up and finds the closest node of the provided type.","   *","   * @param {Collection}","   * @param {filter}","   * @return {Collection}","   */","  closest: function(type, filter) {","    return this.map(function(path) {","      let parent = path.parent;","      while (","        parent &&","        !(","          type.check(parent.value) &&","          (!filter || matchNode(parent.value, filter))","        )","      ) {","        parent = parent.parent;","      }","      return parent || null;","    });","  },","","  /**","   * Finds the declaration for each selected path. Useful for member expressions","   * or JSXElements. Expects a callback function that maps each path to the name","   * to look for.","   *","   * If the callback returns a falsey value, the element is skipped.","   *","   * @param {function} nameGetter","   *","   * @return {Collection}","   */","  getVariableDeclarators: function(nameGetter) {","    return this.map(function(path) {","      /*jshint curly:false*/","      let scope = path.scope;","      if (!scope) return;","      const name = nameGetter.apply(path, arguments);","      if (!name) return;","      scope = scope.lookup(name);","      if (!scope) return;","      const bindings = scope.getBindings()[name];","      if (!bindings) return;","      const decl = Collection.fromPaths(bindings)","        .closest(types.VariableDeclarator);","      if (decl.length === 1) {","        return decl.paths()[0];","      }","    }, types.VariableDeclarator);","  },","};","","function toArray(value) {","  return Array.isArray(value) ? value : [value];","}","","/**","* @mixin","*/","const mutationMethods = {","  /**","   * Simply replaces the selected nodes with the provided node. If a function","   * is provided it is executed for every node and the node is replaced with the","   * functions return value.","   *","   * @param {Node|Array<Node>|function} nodes","   * @return {Collection}","   */","  replaceWith: function(nodes) {","    return this.forEach(function(path, i) {","      const newNodes =","        (typeof nodes === 'function') ? nodes.call(path, path, i) : nodes;","      path.replace.apply(path, toArray(newNodes));","    });","  },","","  /**","   * Inserts a new node before the current one.","   *","   * @param {Node|Array<Node>|function} insert","   * @return {Collection}","   */","  insertBefore: function(insert) {","    return this.forEach(function(path, i) {","      const newNodes =","        (typeof insert === 'function') ? insert.call(path, path, i) : insert;","      path.insertBefore.apply(path, toArray(newNodes));","    });","  },","","  /**","   * Inserts a new node after the current one.","   *","   * @param {Node|Array<Node>|function} insert","   * @return {Collection}","   */","  insertAfter: function(insert) {","    return this.forEach(function(path, i) {","      const newNodes =","        (typeof insert === 'function') ? insert.call(path, path, i) : insert;","      path.insertAfter.apply(path, toArray(newNodes));","    });","  },","","  remove: function() {","    return this.forEach(path => path.prune());","  }","","};","","function register() {","  Collection.registerMethods(traversalMethods, Node);","  Collection.registerMethods(mutationMethods, Node);","  Collection.setDefaultCollectionType(Node);","}","","exports.register = _.once(register);",""],"l":{"13":1,"14":1,"16":1,"17":1,"19":1,"20":1,"25":1,"35":0,"36":0,"38":0,"39":1,"41":0,"42":0,"44":0,"46":0,"47":0,"48":0,"49":0,"50":0,"52":0,"55":0,"58":0,"68":0,"79":0,"80":0,"81":0,"88":0,"90":0,"106":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"118":0,"119":0,"125":1,"126":0,"132":1,"142":0,"143":0,"145":0,"156":0,"157":0,"159":0,"170":0,"171":0,"173":0,"178":0,"183":1,"184":1,"185":1,"186":1,"189":1}},"/home/travis/build/npmtest/node-npmtest-jscodeshift/node_modules/jscodeshift/dist/matchNode.js":{"path":"/home/travis/build/npmtest/node-npmtest-jscodeshift/node_modules/jscodeshift/dist/matchNode.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":1,"10":0,"11":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"matchNode","line":23,"loc":{"start":{"line":23,"column":0},"end":{"line":23,"column":37}}},"2":{"name":"(anonymous_2)","line":28,"loc":{"start":{"line":28,"column":37},"end":{"line":28,"column":56}}},"3":{"name":"isNode","line":38,"loc":{"start":{"line":38,"column":0},"end":{"line":38,"column":23}}}},"statementMap":{"1":{"start":{"line":13,"column":0},"end":{"line":14,"column":77}},"2":{"start":{"line":23,"column":0},"end":{"line":36,"column":1}},"3":{"start":{"line":24,"column":2},"end":{"line":26,"column":3}},"4":{"start":{"line":25,"column":4},"end":{"line":25,"column":28}},"5":{"start":{"line":27,"column":2},"end":{"line":34,"column":3}},"6":{"start":{"line":28,"column":4},"end":{"line":33,"column":7}},"7":{"start":{"line":29,"column":6},"end":{"line":32,"column":8}},"8":{"start":{"line":35,"column":2},"end":{"line":35,"column":29}},"9":{"start":{"line":38,"column":0},"end":{"line":40,"column":1}},"10":{"start":{"line":39,"column":2},"end":{"line":39,"column":44}},"11":{"start":{"line":42,"column":0},"end":{"line":42,"column":27}}},"branchMap":{"1":{"line":24,"type":"if","locations":[{"start":{"line":24,"column":2},"end":{"line":24,"column":2}},{"start":{"line":24,"column":2},"end":{"line":24,"column":2}}]},"2":{"line":27,"type":"if","locations":[{"start":{"line":27,"column":2},"end":{"line":27,"column":2}},{"start":{"line":27,"column":2},"end":{"line":27,"column":2}}]},"3":{"line":27,"type":"binary-expr","locations":[{"start":{"line":27,"column":6},"end":{"line":27,"column":20}},{"start":{"line":27,"column":24},"end":{"line":27,"column":40}}]},"4":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":8},"end":{"line":30,"column":34}},{"start":{"line":31,"column":8},"end":{"line":31,"column":55}}]},"5":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":9},"end":{"line":39,"column":34}},{"start":{"line":39,"column":38},"end":{"line":39,"column":43}}]}},"code":["/*"," *  Copyright (c) 2015-present, Facebook, Inc."," *  All rights reserved."," *"," *  This source code is licensed under the BSD-style license found in the"," *  LICENSE file in the root directory of this source tree. An additional grant"," *  of patent rights can be found in the PATENTS file in the same directory."," *"," */","","'use strict';","","const hasOwn =","  Object.prototype.hasOwnProperty.call.bind(Object.prototype.hasOwnProperty);","","/**"," * Checks whether needle is a strict subset of haystack."," *"," * @param {*} haystack Value to test."," * @param {*} needle Test function or value to look for in `haystack`."," * @return {bool}"," */","function matchNode(haystack, needle) {","  if (typeof needle === 'function') {","    return needle(haystack);","  }","  if (isNode(needle) && isNode(haystack)) {","    return Object.keys(needle).every(function(property) {","      return (","        hasOwn(haystack, property) &&","        matchNode(haystack[property], needle[property])","      );","    });","  }","  return haystack === needle;","}","","function isNode(value) {","  return typeof value === 'object' && value;","}","","module.exports = matchNode;",""],"l":{"13":1,"23":1,"24":0,"25":0,"27":0,"28":0,"29":0,"35":0,"38":1,"39":0,"42":1}},"/home/travis/build/npmtest/node-npmtest-jscodeshift/node_modules/jscodeshift/dist/collections/JSXElement.js":{"path":"/home/travis/build/npmtest/node-npmtest-jscodeshift/node_modules/jscodeshift/dist/collections/JSXElement.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":1,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":1,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":1,"58":0,"59":0,"60":0,"61":0,"62":1,"63":1,"64":1,"65":1,"66":1,"67":1,"68":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":1},"fnMap":{"1":{"name":"(anonymous_1)","line":37,"loc":{"start":{"line":37,"column":19},"end":{"line":37,"column":34}}},"2":{"name":"(anonymous_2)","line":51,"loc":{"start":{"line":51,"column":31},"end":{"line":51,"column":52}}},"3":{"name":"(anonymous_3)","line":59,"loc":{"start":{"line":59,"column":11},"end":{"line":59,"column":26}}},"4":{"name":"(anonymous_4)","line":79,"loc":{"start":{"line":79,"column":17},"end":{"line":79,"column":43}}},"5":{"name":"filter","line":81,"loc":{"start":{"line":81,"column":11},"end":{"line":81,"column":33}}},"6":{"name":"(anonymous_6)","line":86,"loc":{"start":{"line":86,"column":51},"end":{"line":86,"column":66}}},"7":{"name":"(anonymous_7)","line":94,"loc":{"start":{"line":94,"column":34},"end":{"line":94,"column":49}}},"8":{"name":"(anonymous_8)","line":117,"loc":{"start":{"line":117,"column":15},"end":{"line":117,"column":30}}},"9":{"name":"filter","line":118,"loc":{"start":{"line":118,"column":11},"end":{"line":118,"column":33}}},"10":{"name":"(anonymous_10)","line":138,"loc":{"start":{"line":138,"column":14},"end":{"line":138,"column":25}}},"11":{"name":"(anonymous_11)","line":140,"loc":{"start":{"line":140,"column":17},"end":{"line":140,"column":32}}},"12":{"name":"(anonymous_12)","line":155,"loc":{"start":{"line":155,"column":17},"end":{"line":155,"column":28}}},"13":{"name":"(anonymous_13)","line":157,"loc":{"start":{"line":157,"column":17},"end":{"line":157,"column":32}}},"14":{"name":"(anonymous_14)","line":178,"loc":{"start":{"line":178,"column":15},"end":{"line":178,"column":30}}},"15":{"name":"register","line":188,"loc":{"start":{"line":188,"column":0},"end":{"line":188,"column":20}}}},"statementMap":{"1":{"start":{"line":13,"column":0},"end":{"line":13,"column":28}},"2":{"start":{"line":14,"column":0},"end":{"line":14,"column":44}},"3":{"start":{"line":15,"column":0},"end":{"line":15,"column":41}},"4":{"start":{"line":17,"column":0},"end":{"line":17,"column":33}},"5":{"start":{"line":18,"column":0},"end":{"line":18,"column":33}},"6":{"start":{"line":19,"column":0},"end":{"line":19,"column":78}},"7":{"start":{"line":21,"column":0},"end":{"line":21,"column":38}},"8":{"start":{"line":22,"column":0},"end":{"line":22,"column":36}},"9":{"start":{"line":23,"column":0},"end":{"line":23,"column":40}},"10":{"start":{"line":24,"column":0},"end":{"line":24,"column":30}},"11":{"start":{"line":30,"column":0},"end":{"line":69,"column":2}},"12":{"start":{"line":38,"column":4},"end":{"line":38,"column":70}},"13":{"start":{"line":39,"column":4},"end":{"line":39,"column":45}},"14":{"start":{"line":52,"column":4},"end":{"line":55,"column":6}},"15":{"start":{"line":57,"column":4},"end":{"line":67,"column":9}},"16":{"start":{"line":60,"column":8},"end":{"line":60,"column":38}},"17":{"start":{"line":61,"column":8},"end":{"line":66,"column":9}},"18":{"start":{"line":62,"column":10},"end":{"line":65,"column":21}},"19":{"start":{"line":71,"column":0},"end":{"line":126,"column":2}},"20":{"start":{"line":80,"column":4},"end":{"line":80,"column":56}},"21":{"start":{"line":81,"column":4},"end":{"line":108,"column":6}},"22":{"start":{"line":82,"column":6},"end":{"line":84,"column":7}},"23":{"start":{"line":83,"column":8},"end":{"line":83,"column":21}},"24":{"start":{"line":85,"column":6},"end":{"line":85,"column":52}},"25":{"start":{"line":86,"column":6},"end":{"line":92,"column":9}},"26":{"start":{"line":87,"column":8},"end":{"line":90,"column":9}},"27":{"start":{"line":89,"column":10},"end":{"line":89,"column":17}},"28":{"start":{"line":91,"column":8},"end":{"line":91,"column":49}},"29":{"start":{"line":94,"column":6},"end":{"line":107,"column":9}},"30":{"start":{"line":95,"column":8},"end":{"line":97,"column":9}},"31":{"start":{"line":96,"column":10},"end":{"line":96,"column":23}},"32":{"start":{"line":98,"column":8},"end":{"line":98,"column":52}},"33":{"start":{"line":99,"column":8},"end":{"line":99,"column":47}},"34":{"start":{"line":100,"column":8},"end":{"line":100,"column":77}},"35":{"start":{"line":101,"column":8},"end":{"line":106,"column":9}},"36":{"start":{"line":102,"column":10},"end":{"line":102,"column":34}},"37":{"start":{"line":105,"column":10},"end":{"line":105,"column":45}},"38":{"start":{"line":118,"column":4},"end":{"line":124,"column":6}},"39":{"start":{"line":119,"column":6},"end":{"line":123,"column":10}},"40":{"start":{"line":121,"column":19},"end":{"line":122,"column":58}},"41":{"start":{"line":131,"column":0},"end":{"line":168,"column":2}},"42":{"start":{"line":139,"column":4},"end":{"line":139,"column":21}},"43":{"start":{"line":140,"column":4},"end":{"line":146,"column":7}},"44":{"start":{"line":141,"column":6},"end":{"line":141,"column":44}},"45":{"start":{"line":142,"column":6},"end":{"line":142,"column":38}},"46":{"start":{"line":143,"column":6},"end":{"line":145,"column":7}},"47":{"start":{"line":144,"column":8},"end":{"line":144,"column":36}},"48":{"start":{"line":147,"column":4},"end":{"line":147,"column":45}},"49":{"start":{"line":156,"column":4},"end":{"line":156,"column":21}},"50":{"start":{"line":157,"column":4},"end":{"line":165,"column":7}},"51":{"start":{"line":158,"column":6},"end":{"line":158,"column":44}},"52":{"start":{"line":159,"column":6},"end":{"line":159,"column":38}},"53":{"start":{"line":160,"column":6},"end":{"line":164,"column":7}},"54":{"start":{"line":161,"column":8},"end":{"line":163,"column":9}},"55":{"start":{"line":162,"column":10},"end":{"line":162,"column":38}},"56":{"start":{"line":166,"column":4},"end":{"line":166,"column":57}},"57":{"start":{"line":170,"column":0},"end":{"line":186,"column":2}},"58":{"start":{"line":179,"column":4},"end":{"line":179,"column":46}},"59":{"start":{"line":180,"column":4},"end":{"line":182,"column":5}},"60":{"start":{"line":181,"column":6},"end":{"line":181,"column":25}},"61":{"start":{"line":184,"column":4},"end":{"line":184,"column":37}},"62":{"start":{"line":188,"column":0},"end":{"line":192,"column":1}},"63":{"start":{"line":189,"column":2},"end":{"line":189,"column":28}},"64":{"start":{"line":190,"column":2},"end":{"line":190,"column":56}},"65":{"start":{"line":191,"column":2},"end":{"line":191,"column":59}},"66":{"start":{"line":194,"column":0},"end":{"line":194,"column":36}},"67":{"start":{"line":195,"column":0},"end":{"line":195,"column":32}},"68":{"start":{"line":196,"column":0},"end":{"line":196,"column":34}}},"branchMap":{"1":{"line":38,"type":"binary-expr","locations":[{"start":{"line":38,"column":23},"end":{"line":38,"column":27}},{"start":{"line":38,"column":31},"end":{"line":38,"column":69}}]},"2":{"line":53,"type":"binary-expr","locations":[{"start":{"line":53,"column":6},"end":{"line":53,"column":16}},{"start":{"line":53,"column":20},"end":{"line":53,"column":50}}]},"3":{"line":61,"type":"if","locations":[{"start":{"line":61,"column":8},"end":{"line":61,"column":8}},{"start":{"line":61,"column":8},"end":{"line":61,"column":8}}]},"4":{"line":82,"type":"if","locations":[{"start":{"line":82,"column":6},"end":{"line":82,"column":6}},{"start":{"line":82,"column":6},"end":{"line":82,"column":6}}]},"5":{"line":87,"type":"if","locations":[{"start":{"line":87,"column":8},"end":{"line":87,"column":8}},{"start":{"line":87,"column":8},"end":{"line":87,"column":8}}]},"6":{"line":87,"type":"binary-expr","locations":[{"start":{"line":87,"column":12},"end":{"line":87,"column":37}},{"start":{"line":88,"column":10},"end":{"line":88,"column":46}}]},"7":{"line":95,"type":"if","locations":[{"start":{"line":95,"column":8},"end":{"line":95,"column":8}},{"start":{"line":95,"column":8},"end":{"line":95,"column":8}}]},"8":{"line":100,"type":"cond-expr","locations":[{"start":{"line":100,"column":46},"end":{"line":100,"column":57}},{"start":{"line":100,"column":60},"end":{"line":100,"column":76}}]},"9":{"line":101,"type":"if","locations":[{"start":{"line":101,"column":8},"end":{"line":101,"column":8}},{"start":{"line":101,"column":8},"end":{"line":101,"column":8}}]},"10":{"line":119,"type":"binary-expr","locations":[{"start":{"line":119,"column":13},"end":{"line":119,"column":41}},{"start":{"line":120,"column":8},"end":{"line":123,"column":9}}]},"11":{"line":121,"type":"binary-expr","locations":[{"start":{"line":121,"column":19},"end":{"line":121,"column":42}},{"start":{"line":122,"column":19},"end":{"line":122,"column":58}}]},"12":{"line":161,"type":"if","locations":[{"start":{"line":161,"column":8},"end":{"line":161,"column":8}},{"start":{"line":161,"column":8},"end":{"line":161,"column":8}}]},"13":{"line":184,"type":"binary-expr","locations":[{"start":{"line":184,"column":11},"end":{"line":184,"column":15}},{"start":{"line":184,"column":19},"end":{"line":184,"column":28}},{"start":{"line":184,"column":32},"end":{"line":184,"column":36}}]}},"code":["/*"," *  Copyright (c) 2015-present, Facebook, Inc."," *  All rights reserved."," *"," *  This source code is licensed under the BSD-style license found in the"," *  LICENSE file in the root directory of this source tree. An additional grant"," *  of patent rights can be found in the PATENTS file in the same directory."," *"," */","","'use strict';","","const _ = require('lodash');","const Collection = require('../Collection');","const NodeCollection = require('./Node');","","const assert = require('assert');","const recast = require('recast');","const requiresModule = require('./VariableDeclarator').filters.requiresModule;","","const types = recast.types.namedTypes;","const JSXElement = types.JSXElement;","const JSXAttribute = types.JSXAttribute;","const Literal = types.Literal;","","/**"," * Contains filter methods and mutation methods for processing JSXElements."," * @mixin"," */","const globalMethods = {","  /**","   * Finds all JSXElements optionally filtered by name","   *","   * @param {string} name","   * @return {Collection}","   */","  findJSXElements: function(name) {","    const nameFilter = name && {openingElement: {name: {name: name}}};","    return this.find(JSXElement, nameFilter);","  },","","  /**","   * Finds all JSXElements by module name. Given","   *","   *     var Bar = require('Foo');","   *     <Bar />","   *","   * findJSXElementsByModuleName('Foo') will find <Bar />, without having to","   * know the variable name.","   */","  findJSXElementsByModuleName: function(moduleName) {","    assert.ok(","      moduleName && typeof moduleName === 'string',","      'findJSXElementsByModuleName(...) needs a name to look for'","    );","","    return this.find(types.VariableDeclarator)","      .filter(requiresModule(moduleName))","      .map(function(path) {","        const id = path.value.id.name;","        if (id) {","          return Collection.fromPaths([path])","            .closestScope()","            .findJSXElements(id)","            .paths();","        }","      });","  }","};","","const filterMethods = {","","  /**","   * Filter method for attributes.","   *","   * @param {Object} attributeFilter","   * @return {function}","   */","  hasAttributes: function(attributeFilter) {","    const attributeNames = Object.keys(attributeFilter);","    return function filter(path) {","      if (!JSXElement.check(path.value)) {","        return false;","      }","      const elementAttributes = Object.create(null);","      path.value.openingElement.attributes.forEach(function(attr) {","        if (!JSXAttribute.check(attr) ||","          !(attr.name.name in attributeFilter)) {","          return;","        }","        elementAttributes[attr.name.name] = attr;","      });","","      return attributeNames.every(function(name) {","        if (!(name in elementAttributes) ){","          return false;","        }","        const value = elementAttributes[name].value;","        const expected = attributeFilter[name];","        const actual = Literal.check(value) ? value.value : value.expression;","        if (typeof expected === 'function') {","          return expected(actual);","        } else {","          // Literal attribute values are always strings","          return String(expected) === actual;","        }","      });","    };","  },","","  /**","   * Filter elements which contain a specific child type","   *","   * @param {string} name","   * @return {function}","   */","  hasChildren: function(name) {","    return function filter(path) {","      return JSXElement.check(path.value) &&","        path.value.children.some(","          child => JSXElement.check(child) &&","                   child.openingElement.name.name === name","        );","    };","  }","};","","/**","* @mixin","*/","const traversalMethods = {","","  /**","   * Returns all child nodes, including literals and expressions.","   *","   * @return {Collection}","   */","  childNodes: function() {","    const paths = [];","    this.forEach(function(path) {","      const children = path.get('children');","      const l = children.value.length;","      for (let i = 0; i < l; i++) {","        paths.push(children.get(i));","      }","    });","    return Collection.fromPaths(paths, this);","  },","","  /**","   * Returns all children that are JSXElements.","   *","   * @return {JSXElementCollection}","   */","  childElements: function() {","    const paths = [];","    this.forEach(function(path) {","      const children = path.get('children');","      const l = children.value.length;","      for (let i = 0; i < l; i++) {","        if (types.JSXElement.check(children.value[i])) {","          paths.push(children.get(i));","        }","      }","    });","    return Collection.fromPaths(paths, this, JSXElement);","  },","};","","const mappingMethods = {","  /**","   * Given a JSXElement, returns its \"root\" name. E.g. it would return \"Foo\" for","   * both <Foo /> and <Foo.Bar />.","   *","   * @param {NodePath} path","   * @return {string}","   */","  getRootName: function(path) {","    let name = path.value.openingElement.name;","    while (types.JSXMemberExpression.check(name)) {","      name = name.object;","    }","","    return name && name.name || null;","  }","};","","function register() {","  NodeCollection.register();","  Collection.registerMethods(globalMethods, types.Node);","  Collection.registerMethods(traversalMethods, JSXElement);","}","","exports.register = _.once(register);","exports.filters = filterMethods;","exports.mappings = mappingMethods;",""],"l":{"13":1,"14":1,"15":1,"17":1,"18":1,"19":1,"21":1,"22":1,"23":1,"24":1,"30":1,"38":0,"39":0,"52":0,"57":0,"60":0,"61":0,"62":0,"71":1,"80":0,"81":0,"82":0,"83":0,"85":0,"86":0,"87":0,"89":0,"91":0,"94":0,"95":0,"96":0,"98":0,"99":0,"100":0,"101":0,"102":0,"105":0,"118":0,"119":0,"121":0,"131":1,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"147":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"166":0,"170":1,"179":0,"180":0,"181":0,"184":0,"188":1,"189":1,"190":1,"191":1,"194":1,"195":1,"196":1}},"/home/travis/build/npmtest/node-npmtest-jscodeshift/node_modules/jscodeshift/dist/collections/VariableDeclarator.js":{"path":"/home/travis/build/npmtest/node-npmtest-jscodeshift/node_modules/jscodeshift/dist/collections/VariableDeclarator.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":0,"12":0,"13":1,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":1,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":1,"46":1,"47":1,"48":1,"49":1,"50":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0,0],"6":[0,0],"7":[0,0],"8":[0,0,0],"9":[0,0],"10":[0,0,0],"11":[0,0],"12":[0,0,0],"13":[0,0],"14":[0,0],"15":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":1},"fnMap":{"1":{"name":"(anonymous_1)","line":35,"loc":{"start":{"line":35,"column":27},"end":{"line":35,"column":42}}},"2":{"name":"(anonymous_2)","line":49,"loc":{"start":{"line":49,"column":18},"end":{"line":49,"column":34}}},"3":{"name":"(anonymous_3)","line":54,"loc":{"start":{"line":54,"column":11},"end":{"line":54,"column":26}}},"4":{"name":"(anonymous_4)","line":79,"loc":{"start":{"line":79,"column":12},"end":{"line":79,"column":30}}},"5":{"name":"(anonymous_5)","line":81,"loc":{"start":{"line":81,"column":24},"end":{"line":81,"column":39}}},"6":{"name":"(anonymous_6)","line":88,"loc":{"start":{"line":88,"column":16},"end":{"line":88,"column":31}}},"7":{"name":"(anonymous_7)","line":120,"loc":{"start":{"line":120,"column":17},"end":{"line":120,"column":32}}},"8":{"name":"register","line":137,"loc":{"start":{"line":137,"column":0},"end":{"line":137,"column":20}}}},"statementMap":{"1":{"start":{"line":13,"column":0},"end":{"line":13,"column":28}},"2":{"start":{"line":14,"column":0},"end":{"line":14,"column":44}},"3":{"start":{"line":15,"column":0},"end":{"line":15,"column":41}},"4":{"start":{"line":16,"column":0},"end":{"line":16,"column":42}},"5":{"start":{"line":17,"column":0},"end":{"line":17,"column":33}},"6":{"start":{"line":19,"column":0},"end":{"line":19,"column":65}},"7":{"start":{"line":20,"column":0},"end":{"line":20,"column":32}},"8":{"start":{"line":21,"column":0},"end":{"line":21,"column":36}},"9":{"start":{"line":23,"column":0},"end":{"line":23,"column":70}},"10":{"start":{"line":28,"column":0},"end":{"line":39,"column":2}},"11":{"start":{"line":36,"column":4},"end":{"line":36,"column":52}},"12":{"start":{"line":37,"column":4},"end":{"line":37,"column":49}},"13":{"start":{"line":41,"column":0},"end":{"line":67,"column":2}},"14":{"start":{"line":50,"column":4},"end":{"line":52,"column":5}},"15":{"start":{"line":51,"column":6},"end":{"line":51,"column":22}},"16":{"start":{"line":53,"column":4},"end":{"line":53,"column":54}},"17":{"start":{"line":54,"column":4},"end":{"line":65,"column":6}},"18":{"start":{"line":55,"column":6},"end":{"line":55,"column":30}},"19":{"start":{"line":56,"column":6},"end":{"line":60,"column":7}},"20":{"start":{"line":59,"column":8},"end":{"line":59,"column":21}},"21":{"start":{"line":61,"column":6},"end":{"line":64,"column":10}},"22":{"start":{"line":63,"column":15},"end":{"line":63,"column":74}},"23":{"start":{"line":72,"column":0},"end":{"line":134,"column":2}},"24":{"start":{"line":81,"column":4},"end":{"line":132,"column":7}},"25":{"start":{"line":82,"column":6},"end":{"line":82,"column":30}},"26":{"start":{"line":83,"column":6},"end":{"line":83,"column":35}},"27":{"start":{"line":84,"column":6},"end":{"line":84,"column":35}},"28":{"start":{"line":85,"column":6},"end":{"line":85,"column":38}},"29":{"start":{"line":86,"column":6},"end":{"line":131,"column":11}},"30":{"start":{"line":89,"column":10},"end":{"line":89,"column":42}},"31":{"start":{"line":91,"column":10},"end":{"line":98,"column":11}},"32":{"start":{"line":97,"column":12},"end":{"line":97,"column":25}},"33":{"start":{"line":100,"column":10},"end":{"line":107,"column":11}},"34":{"start":{"line":106,"column":12},"end":{"line":106,"column":25}},"35":{"start":{"line":109,"column":10},"end":{"line":116,"column":11}},"36":{"start":{"line":115,"column":12},"end":{"line":115,"column":25}},"37":{"start":{"line":118,"column":10},"end":{"line":118,"column":22}},"38":{"start":{"line":121,"column":10},"end":{"line":121,"column":33}},"39":{"start":{"line":122,"column":10},"end":{"line":127,"column":11}},"40":{"start":{"line":123,"column":12},"end":{"line":125,"column":13}},"41":{"start":{"line":124,"column":14},"end":{"line":124,"column":21}},"42":{"start":{"line":126,"column":12},"end":{"line":126,"column":33}},"43":{"start":{"line":128,"column":10},"end":{"line":130,"column":11}},"44":{"start":{"line":129,"column":12},"end":{"line":129,"column":46}},"45":{"start":{"line":137,"column":0},"end":{"line":141,"column":1}},"46":{"start":{"line":138,"column":2},"end":{"line":138,"column":28}},"47":{"start":{"line":139,"column":2},"end":{"line":139,"column":44}},"48":{"start":{"line":140,"column":2},"end":{"line":140,"column":67}},"49":{"start":{"line":143,"column":0},"end":{"line":143,"column":36}},"50":{"start":{"line":144,"column":0},"end":{"line":144,"column":32}}},"branchMap":{"1":{"line":36,"type":"cond-expr","locations":[{"start":{"line":36,"column":26},"end":{"line":36,"column":44}},{"start":{"line":36,"column":47},"end":{"line":36,"column":51}}]},"2":{"line":50,"type":"if","locations":[{"start":{"line":50,"column":4},"end":{"line":50,"column":4}},{"start":{"line":50,"column":4},"end":{"line":50,"column":4}}]},"3":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":8},"end":{"line":50,"column":13}},{"start":{"line":50,"column":17},"end":{"line":50,"column":38}}]},"4":{"line":56,"type":"if","locations":[{"start":{"line":56,"column":6},"end":{"line":56,"column":6}},{"start":{"line":56,"column":6},"end":{"line":56,"column":6}}]},"5":{"line":56,"type":"binary-expr","locations":[{"start":{"line":56,"column":10},"end":{"line":56,"column":41}},{"start":{"line":57,"column":10},"end":{"line":57,"column":48}},{"start":{"line":58,"column":10},"end":{"line":58,"column":69}}]},"6":{"line":61,"type":"binary-expr","locations":[{"start":{"line":61,"column":13},"end":{"line":61,"column":19}},{"start":{"line":62,"column":8},"end":{"line":64,"column":9}}]},"7":{"line":91,"type":"if","locations":[{"start":{"line":91,"column":10},"end":{"line":91,"column":10}},{"start":{"line":91,"column":10},"end":{"line":91,"column":10}}]},"8":{"line":92,"type":"binary-expr","locations":[{"start":{"line":92,"column":12},"end":{"line":92,"column":48}},{"start":{"line":93,"column":12},"end":{"line":93,"column":41}},{"start":{"line":94,"column":12},"end":{"line":94,"column":28}}]},"9":{"line":100,"type":"if","locations":[{"start":{"line":100,"column":10},"end":{"line":100,"column":10}},{"start":{"line":100,"column":10},"end":{"line":100,"column":10}}]},"10":{"line":101,"type":"binary-expr","locations":[{"start":{"line":101,"column":12},"end":{"line":101,"column":40}},{"start":{"line":102,"column":12},"end":{"line":102,"column":36}},{"start":{"line":103,"column":12},"end":{"line":103,"column":28}}]},"11":{"line":109,"type":"if","locations":[{"start":{"line":109,"column":10},"end":{"line":109,"column":10}},{"start":{"line":109,"column":10},"end":{"line":109,"column":10}}]},"12":{"line":110,"type":"binary-expr","locations":[{"start":{"line":110,"column":12},"end":{"line":110,"column":48}},{"start":{"line":111,"column":12},"end":{"line":111,"column":36}},{"start":{"line":112,"column":12},"end":{"line":112,"column":28}}]},"13":{"line":122,"type":"binary-expr","locations":[{"start":{"line":122,"column":17},"end":{"line":122,"column":22}},{"start":{"line":122,"column":26},"end":{"line":122,"column":45}}]},"14":{"line":123,"type":"if","locations":[{"start":{"line":123,"column":12},"end":{"line":123,"column":12}},{"start":{"line":123,"column":12},"end":{"line":123,"column":12}}]},"15":{"line":128,"type":"if","locations":[{"start":{"line":128,"column":10},"end":{"line":128,"column":10}},{"start":{"line":128,"column":10},"end":{"line":128,"column":10}}]}},"code":["/*"," *  Copyright (c) 2015-present, Facebook, Inc."," *  All rights reserved."," *"," *  This source code is licensed under the BSD-style license found in the"," *  LICENSE file in the root directory of this source tree. An additional grant"," *  of patent rights can be found in the PATENTS file in the same directory."," *"," */","","'use strict';","","const _ = require('lodash');","const Collection = require('../Collection');","const NodeCollection = require('./Node');","const matchNode = require('../matchNode');","const recast = require('recast');","","const astNodesAreEquivalent = recast.types.astNodesAreEquivalent;","const b = recast.types.builders;","var types = recast.types.namedTypes;","","const VariableDeclarator = recast.types.namedTypes.VariableDeclarator;","","/**","* @mixin","*/","const globalMethods = {","  /**","   * Finds all variable declarators, optionally filtered by name.","   *","   * @param {string} name","   * @return {Collection}","   */","  findVariableDeclarators: function(name) {","    const filter = name ? {id: {name: name}} : null;","    return this.find(VariableDeclarator, filter);","  }","};","","const filterMethods = {","  /**","   * Returns a function that returns true if the provided path is a variable","   * declarator and requires one of the specified module names.","   *","   * @param {string|Array} names A module name or an array of module names","   * @return {Function}","   */","  requiresModule: function(names) {","    if (names && !Array.isArray(names)) {","      names = [names];","    }","    const requireIdentifier = b.identifier('require');","    return function(path) {","      const node = path.value;","      if (!VariableDeclarator.check(node) ||","          !types.CallExpression.check(node.init) ||","          !astNodesAreEquivalent(node.init.callee, requireIdentifier)) {","        return false;","      }","      return !names ||","        names.some(","          n => astNodesAreEquivalent(node.init.arguments[0], b.literal(n))","        );","    };","  }","};","","/**","* @mixin","*/","const transformMethods = {","  /**","   * Renames a variable and all its occurrences.","   *","   * @param {string} newName","   * @return {Collection}","   */","  renameTo: function(newName) {","    // TODO: Include JSXElements","    return this.forEach(function(path) {","      const node = path.value;","      const oldName = node.id.name;","      const rootScope = path.scope;","      const rootPath = rootScope.path;","      Collection.fromPaths([rootPath])","        .find(types.Identifier, {name: oldName})","        .filter(function(path) { // ignore non-variables","          const parent = path.parent.node;","","          if (","            types.MemberExpression.check(parent) &&","            parent.property === path.node &&","            !parent.computed","          ) {","            // obj.oldName","            return false;","          }","","          if (","            types.Property.check(parent) &&","            parent.key === path.node &&","            !parent.computed","          ) {","            // { oldName: 3 }","            return false;","          }","","          if (","            types.MethodDefinition.check(parent) &&","            parent.key === path.node &&","            !parent.computed","          ) {","            // class A { oldName() {} }","            return false;","          }","","          return true;","        })","        .forEach(function(path) {","          let scope = path.scope;","          while (scope && scope !== rootScope) {","            if (scope.declares(oldName)) {","              return;","            }","            scope = scope.parent;","          }","          if (scope) { // identifier must refer to declared variable","            path.get('name').replace(newName);","          }","        });","    });","  }","};","","","function register() {","  NodeCollection.register();","  Collection.registerMethods(globalMethods);","  Collection.registerMethods(transformMethods, VariableDeclarator);","}","","exports.register = _.once(register);","exports.filters = filterMethods;",""],"l":{"13":1,"14":1,"15":1,"16":1,"17":1,"19":1,"20":1,"21":1,"23":1,"28":1,"36":0,"37":0,"41":1,"50":0,"51":0,"53":0,"54":0,"55":0,"56":0,"59":0,"61":0,"63":0,"72":1,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"89":0,"91":0,"97":0,"100":0,"106":0,"109":0,"115":0,"118":0,"121":0,"122":0,"123":0,"124":0,"126":0,"128":0,"129":0,"137":1,"138":1,"139":1,"140":1,"143":1,"144":1}},"/home/travis/build/npmtest/node-npmtest-jscodeshift/node_modules/jscodeshift/dist/getParser.js":{"path":"/home/travis/build/npmtest/node-npmtest-jscodeshift/node_modules/jscodeshift/dist/getParser.js","s":{"1":1,"2":1,"3":0,"4":0,"5":1},"b":{"1":[0,0,0,1]},"f":{"1":1},"fnMap":{"1":{"name":"getParser","line":13,"loc":{"start":{"line":13,"column":17},"end":{"line":13,"column":48}}}},"statementMap":{"1":{"start":{"line":13,"column":0},"end":{"line":23,"column":2}},"2":{"start":{"line":14,"column":2},"end":{"line":22,"column":3}},"3":{"start":{"line":16,"column":6},"end":{"line":16,"column":42}},"4":{"start":{"line":18,"column":6},"end":{"line":18,"column":39}},"5":{"start":{"line":21,"column":6},"end":{"line":21,"column":35}}},"branchMap":{"1":{"line":14,"type":"switch","locations":[{"start":{"line":15,"column":4},"end":{"line":16,"column":42}},{"start":{"line":17,"column":4},"end":{"line":18,"column":39}},{"start":{"line":19,"column":4},"end":{"line":19,"column":17}},{"start":{"line":20,"column":4},"end":{"line":21,"column":35}}]}},"code":["/*"," *  Copyright (c) 2015-present, Facebook, Inc."," *  All rights reserved."," *"," *  This source code is licensed under the BSD-style license found in the"," *  LICENSE file in the root directory of this source tree. An additional grant"," *  of patent rights can be found in the PATENTS file in the same directory."," *"," */","","'use strict';","","module.exports = function getParser(parserName) {","  switch (parserName) {","    case 'babylon':","      return require('../parser/babylon');","    case 'flow':","      return require('../parser/flow');","    case 'babel':","    default:","      return require('babel-core');","  }","};",""],"l":{"13":1,"14":1,"16":0,"18":0,"21":1}},"/home/travis/build/npmtest/node-npmtest-jscodeshift/node_modules/jscodeshift/dist/template.js":{"path":"/home/travis/build/npmtest/node-npmtest-jscodeshift/node_modules/jscodeshift/dist/template.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":1,"7":0,"8":0,"9":0,"10":0,"11":1,"12":0,"13":1,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":1,"41":0,"42":0,"43":0,"44":1,"45":0,"46":1,"47":1,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":1,"56":0,"57":1,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":1,"9":0,"10":0,"11":0},"fnMap":{"1":{"name":"splice","line":18,"loc":{"start":{"line":18,"column":0},"end":{"line":18,"column":43}}},"2":{"name":"cleanLocation","line":22,"loc":{"start":{"line":22,"column":0},"end":{"line":22,"column":29}}},"3":{"name":"ensureStatement","line":29,"loc":{"start":{"line":29,"column":0},"end":{"line":29,"column":31}}},"4":{"name":"getVistor","line":37,"loc":{"start":{"line":37,"column":0},"end":{"line":37,"column":36}}},"5":{"name":"(anonymous_5)","line":39,"loc":{"start":{"line":39,"column":21},"end":{"line":39,"column":36}}},"6":{"name":"replaceNodes","line":100,"loc":{"start":{"line":100,"column":0},"end":{"line":100,"column":52}}},"7":{"name":"getRandomVarName","line":106,"loc":{"start":{"line":106,"column":0},"end":{"line":106,"column":28}}},"8":{"name":"withParser","line":111,"loc":{"start":{"line":111,"column":17},"end":{"line":111,"column":45}}},"9":{"name":"statements","line":112,"loc":{"start":{"line":112,"column":2},"end":{"line":112,"column":46}}},"10":{"name":"statement","line":128,"loc":{"start":{"line":128,"column":2},"end":{"line":128,"column":45}}},"11":{"name":"expression","line":132,"loc":{"start":{"line":132,"column":2},"end":{"line":132,"column":46}}}},"statementMap":{"1":{"start":{"line":13,"column":0},"end":{"line":13,"column":33}},"2":{"start":{"line":15,"column":0},"end":{"line":15,"column":39}},"3":{"start":{"line":16,"column":0},"end":{"line":16,"column":38}},"4":{"start":{"line":18,"column":0},"end":{"line":20,"column":1}},"5":{"start":{"line":19,"column":2},"end":{"line":19,"column":71}},"6":{"start":{"line":22,"column":0},"end":{"line":27,"column":1}},"7":{"start":{"line":23,"column":2},"end":{"line":23,"column":20}},"8":{"start":{"line":24,"column":2},"end":{"line":24,"column":18}},"9":{"start":{"line":25,"column":2},"end":{"line":25,"column":18}},"10":{"start":{"line":26,"column":2},"end":{"line":26,"column":14}},"11":{"start":{"line":29,"column":0},"end":{"line":35,"column":1}},"12":{"start":{"line":30,"column":2},"end":{"line":34,"column":39}},"13":{"start":{"line":37,"column":0},"end":{"line":98,"column":1}},"14":{"start":{"line":38,"column":2},"end":{"line":97,"column":4}},"15":{"start":{"line":40,"column":6},"end":{"line":40,"column":26}},"16":{"start":{"line":41,"column":6},"end":{"line":41,"column":29}},"17":{"start":{"line":42,"column":6},"end":{"line":42,"column":38}},"18":{"start":{"line":45,"column":6},"end":{"line":45,"column":51}},"19":{"start":{"line":46,"column":6},"end":{"line":48,"column":7}},"20":{"start":{"line":47,"column":8},"end":{"line":47,"column":15}},"21":{"start":{"line":50,"column":6},"end":{"line":50,"column":40}},"22":{"start":{"line":51,"column":6},"end":{"line":51,"column":29}},"23":{"start":{"line":54,"column":6},"end":{"line":95,"column":7}},"24":{"start":{"line":56,"column":8},"end":{"line":90,"column":9}},"25":{"start":{"line":59,"column":10},"end":{"line":59,"column":51}},"26":{"start":{"line":60,"column":15},"end":{"line":90,"column":9}},"27":{"start":{"line":62,"column":10},"end":{"line":66,"column":12}},"28":{"start":{"line":67,"column":15},"end":{"line":90,"column":9}},"29":{"start":{"line":69,"column":10},"end":{"line":69,"column":53}},"30":{"start":{"line":70,"column":15},"end":{"line":90,"column":9}},"31":{"start":{"line":72,"column":10},"end":{"line":76,"column":12}},"32":{"start":{"line":77,"column":15},"end":{"line":90,"column":9}},"33":{"start":{"line":80,"column":10},"end":{"line":80,"column":54}},"34":{"start":{"line":81,"column":15},"end":{"line":90,"column":9}},"35":{"start":{"line":83,"column":10},"end":{"line":86,"column":12}},"36":{"start":{"line":89,"column":10},"end":{"line":89,"column":48}},"37":{"start":{"line":91,"column":13},"end":{"line":95,"column":7}},"38":{"start":{"line":92,"column":8},"end":{"line":92,"column":58}},"39":{"start":{"line":94,"column":8},"end":{"line":94,"column":34}},"40":{"start":{"line":100,"column":0},"end":{"line":104,"column":1}},"41":{"start":{"line":101,"column":2},"end":{"line":101,"column":42}},"42":{"start":{"line":102,"column":2},"end":{"line":102,"column":48}},"43":{"start":{"line":103,"column":2},"end":{"line":103,"column":13}},"44":{"start":{"line":106,"column":0},"end":{"line":108,"column":1}},"45":{"start":{"line":107,"column":2},"end":{"line":107,"column":60}},"46":{"start":{"line":111,"column":0},"end":{"line":149,"column":1}},"47":{"start":{"line":112,"column":2},"end":{"line":126,"column":3}},"48":{"start":{"line":113,"column":4},"end":{"line":113,"column":36}},"49":{"start":{"line":114,"column":4},"end":{"line":114,"column":49}},"50":{"start":{"line":115,"column":4},"end":{"line":115,"column":56}},"51":{"start":{"line":115,"column":36},"end":{"line":115,"column":54}},"52":{"start":{"line":116,"column":4},"end":{"line":118,"column":6}},"53":{"start":{"line":117,"column":27},"end":{"line":117,"column":58}},"54":{"start":{"line":120,"column":4},"end":{"line":125,"column":19}},"55":{"start":{"line":128,"column":2},"end":{"line":130,"column":3}},"56":{"start":{"line":129,"column":4},"end":{"line":129,"column":48}},"57":{"start":{"line":132,"column":2},"end":{"line":146,"column":3}},"58":{"start":{"line":134,"column":4},"end":{"line":134,"column":36}},"59":{"start":{"line":135,"column":4},"end":{"line":140,"column":5}},"60":{"start":{"line":136,"column":6},"end":{"line":136,"column":38}},"61":{"start":{"line":137,"column":6},"end":{"line":137,"column":43}},"62":{"start":{"line":138,"column":11},"end":{"line":140,"column":5}},"63":{"start":{"line":139,"column":6},"end":{"line":139,"column":44}},"64":{"start":{"line":142,"column":4},"end":{"line":145,"column":17}},"65":{"start":{"line":148,"column":2},"end":{"line":148,"column":45}}},"branchMap":{"1":{"line":30,"type":"cond-expr","locations":[{"start":{"line":33,"column":4},"end":{"line":33,"column":23}},{"start":{"line":34,"column":4},"end":{"line":34,"column":38}}]},"2":{"line":46,"type":"if","locations":[{"start":{"line":46,"column":6},"end":{"line":46,"column":6}},{"start":{"line":46,"column":6},"end":{"line":46,"column":6}}]},"3":{"line":54,"type":"if","locations":[{"start":{"line":54,"column":6},"end":{"line":54,"column":6}},{"start":{"line":54,"column":6},"end":{"line":54,"column":6}}]},"4":{"line":56,"type":"if","locations":[{"start":{"line":56,"column":8},"end":{"line":56,"column":8}},{"start":{"line":56,"column":8},"end":{"line":56,"column":8}}]},"5":{"line":56,"type":"binary-expr","locations":[{"start":{"line":56,"column":12},"end":{"line":56,"column":40}},{"start":{"line":57,"column":12},"end":{"line":57,"column":44}}]},"6":{"line":60,"type":"if","locations":[{"start":{"line":60,"column":15},"end":{"line":60,"column":15}},{"start":{"line":60,"column":15},"end":{"line":60,"column":15}}]},"7":{"line":67,"type":"if","locations":[{"start":{"line":67,"column":15},"end":{"line":67,"column":15}},{"start":{"line":67,"column":15},"end":{"line":67,"column":15}}]},"8":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":15},"end":{"line":70,"column":15}},{"start":{"line":70,"column":15},"end":{"line":70,"column":15}}]},"9":{"line":70,"type":"binary-expr","locations":[{"start":{"line":70,"column":19},"end":{"line":70,"column":47}},{"start":{"line":70,"column":51},"end":{"line":70,"column":67}}]},"10":{"line":77,"type":"if","locations":[{"start":{"line":77,"column":15},"end":{"line":77,"column":15}},{"start":{"line":77,"column":15},"end":{"line":77,"column":15}}]},"11":{"line":77,"type":"binary-expr","locations":[{"start":{"line":77,"column":19},"end":{"line":77,"column":53}},{"start":{"line":78,"column":12},"end":{"line":78,"column":47}}]},"12":{"line":81,"type":"if","locations":[{"start":{"line":81,"column":15},"end":{"line":81,"column":15}},{"start":{"line":81,"column":15},"end":{"line":81,"column":15}}]},"13":{"line":91,"type":"if","locations":[{"start":{"line":91,"column":13},"end":{"line":91,"column":13}},{"start":{"line":91,"column":13},"end":{"line":91,"column":13}}]},"14":{"line":135,"type":"if","locations":[{"start":{"line":135,"column":4},"end":{"line":135,"column":4}},{"start":{"line":135,"column":4},"end":{"line":135,"column":4}}]},"15":{"line":138,"type":"if","locations":[{"start":{"line":138,"column":11},"end":{"line":138,"column":11}},{"start":{"line":138,"column":11},"end":{"line":138,"column":11}}]}},"code":["/*"," *  Copyright (c) 2015-present, Facebook, Inc."," *  All rights reserved."," *"," *  This source code is licensed under the BSD-style license found in the"," *  LICENSE file in the root directory of this source tree. An additional grant"," *  of patent rights can be found in the PATENTS file in the same directory."," *"," */","","'use strict';","","const recast = require('recast');","","const builders = recast.types.builders;","const types = recast.types.namedTypes;","","function splice(arr, element, replacement) {","  arr.splice.apply(arr, [arr.indexOf(element), 1].concat(replacement));","}","","function cleanLocation(node) {","  delete node.start;","  delete node.end;","  delete node.loc;","  return node;","}","","function ensureStatement(node) {","  return types.Statement.check(node) ?","    // Removing the location information seems to ensure that the node is","    // correctly reprinted with a trailing semicolon","    cleanLocation(node) :","    builders.expressionStatement(node);","}","","function getVistor(varNames, nodes) {","  return {","    visitIdentifier: function(path) {","      this.traverse(path);","      const node = path.node;","      const parent = path.parent.node;","","      // If this identifier is not one of our generated ones, do nothing","      const varIndex = varNames.indexOf(node.name);","      if (varIndex === -1) {","        return;","      }","","      let replacement = nodes[varIndex];","      nodes[varIndex] = null;","","      // If the replacement is an array, we need to explode the nodes in context","      if (Array.isArray(replacement)) {","","        if (types.Function.check(parent) &&","            parent.params.indexOf(node) > -1) {","          // Function parameters: function foo(${bar}) {}","          splice(parent.params, node, replacement);","        } else if (types.VariableDeclarator.check(parent)) {","          // Variable declarations: var foo = ${bar}, baz = 42;","          splice(","            path.parent.parent.node.declarations,","            parent,","            replacement","          );","        } else if (types.ArrayExpression.check(parent)) {","          // Arrays: var foo = [${bar}, baz];","          splice(parent.elements, node, replacement);","        } else if (types.Property.check(parent) && parent.shorthand) {","          // Objects: var foo = {${bar}, baz: 42};","          splice(","            path.parent.parent.node.properties,","            parent,","            replacement","          );","        } else if (types.CallExpression.check(parent) &&","            parent.arguments.indexOf(node) > -1) {","          // Function call arguments: foo(${bar}, baz)","          splice(parent.arguments, node, replacement);","        } else if (types.ExpressionStatement.check(parent)) {","          // Generic sequence of statements: { ${foo}; bar; }","          path.parent.replace.apply(","            path.parent,","            replacement.map(ensureStatement)","          );","        } else {","          // Every else, let recast take care of it","          path.replace.apply(path, replacement);","        }","      } else if (types.ExpressionStatement.check(parent)) {","        path.parent.replace(ensureStatement(replacement));","      } else {","        path.replace(replacement);","      }","    }","  };","}","","function replaceNodes(src, varNames, nodes, parser) {","  const ast = recast.parse(src, {parser});","  recast.visit(ast, getVistor(varNames, nodes));","  return ast;","}","","function getRandomVarName() {","  return `$jscodeshift${Math.floor(Math.random() * 1000)}$`;","}","","","module.exports = function withParser(parser) {","  function statements(template/*, ...nodes*/) {","    template = Array.from(template);","    const nodes = Array.from(arguments).slice(1);","    const varNames = nodes.map(n => getRandomVarName());","    const src = template.reduce(","      (result, elem, i) => result + varNames[i - 1] + elem","    );","","    return replaceNodes(","      src,","      varNames,","      nodes,","      parser","    ).program.body;","  }","","  function statement(/*template, ...nodes*/) {","    return statements.apply(null, arguments)[0];","  }","","  function expression(template/*, ...nodes*/) {","    // wrap code in `(...)` to force evaluation as expression","    template = Array.from(template);","    if (template.length > 1) {","      template[0] = '(' + template[0];","      template[template.length - 1] += ')';","    } else if (template.length === 0) {","      template[0] = '(' + template[0] + ')';","    }","","    return statement.apply(","      null,","      [template].concat(Array.from(arguments).slice(1))","    ).expression;","  }","","  return {statements, statement, expression};","}",""],"l":{"13":1,"15":1,"16":1,"18":1,"19":0,"22":1,"23":0,"24":0,"25":0,"26":0,"29":1,"30":0,"37":1,"38":0,"40":0,"41":0,"42":0,"45":0,"46":0,"47":0,"50":0,"51":0,"54":0,"56":0,"59":0,"60":0,"62":0,"67":0,"69":0,"70":0,"72":0,"77":0,"80":0,"81":0,"83":0,"89":0,"91":0,"92":0,"94":0,"100":1,"101":0,"102":0,"103":0,"106":1,"107":0,"111":1,"112":1,"113":0,"114":0,"115":0,"116":0,"117":0,"120":0,"128":1,"129":0,"132":1,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"142":0,"148":1}},"/home/travis/build/npmtest/node-npmtest-jscodeshift/node_modules/jscodeshift/parser/babylon.js":{"path":"/home/travis/build/npmtest/node-npmtest-jscodeshift/node_modules/jscodeshift/parser/babylon.js","s":{"1":1,"2":1,"3":1,"4":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"parse","line":40,"loc":{"start":{"line":40,"column":16},"end":{"line":40,"column":38}}}},"statementMap":{"1":{"start":{"line":13,"column":0},"end":{"line":13,"column":35}},"2":{"start":{"line":15,"column":0},"end":{"line":35,"column":2}},"3":{"start":{"line":40,"column":0},"end":{"line":42,"column":2}},"4":{"start":{"line":41,"column":2},"end":{"line":41,"column":38}}},"branchMap":{},"code":["/*"," *  Copyright (c) 2015-present, Facebook, Inc."," *  All rights reserved."," *"," *  This source code is licensed under the BSD-style license found in the"," *  LICENSE file in the root directory of this source tree. An additional grant"," *  of patent rights can be found in the PATENTS file in the same directory."," *"," */","","'use strict';","","const babylon = require('babylon');","","const options = {","  sourceType: 'module',","  allowImportExportEverywhere: true,","  allowReturnOutsideFunction: true,","  plugins: [","    'jsx',","    'flow',","    'asyncFunctions',","    'classConstructorCall',","    'doExpressions',","    'trailingFunctionCommas',","    'objectRestSpread',","    'decorators',","    'classProperties',","    'exportExtensions',","    'exponentiationOperator',","    'asyncGenerators',","    'functionBind',","    'functionSent',","  ],","};","","/**"," * Wrapper to set default options"," */","exports.parse = function parse (code) {","  return babylon.parse(code, options);","};",""],"l":{"13":1,"15":1,"40":1,"41":0}},"/home/travis/build/npmtest/node-npmtest-jscodeshift/node_modules/jscodeshift/parser/flow.js":{"path":"/home/travis/build/npmtest/node-npmtest-jscodeshift/node_modules/jscodeshift/parser/flow.js","s":{"1":1,"2":1,"3":1,"4":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"parse","line":26,"loc":{"start":{"line":26,"column":16},"end":{"line":26,"column":37}}}},"statementMap":{"1":{"start":{"line":13,"column":0},"end":{"line":13,"column":42}},"2":{"start":{"line":15,"column":0},"end":{"line":21,"column":2}},"3":{"start":{"line":26,"column":0},"end":{"line":28,"column":2}},"4":{"start":{"line":27,"column":2},"end":{"line":27,"column":41}}},"branchMap":{},"code":["/*"," *  Copyright (c) 2015-present, Facebook, Inc."," *  All rights reserved."," *"," *  This source code is licensed under the BSD-style license found in the"," *  LICENSE file in the root directory of this source tree. An additional grant"," *  of patent rights can be found in the PATENTS file in the same directory."," *"," */","","'use strict';","","const flowParser = require('flow-parser');","","const options = {","  esproposal_class_instance_fields: true,","  esproposal_class_static_fields: true,","  esproposal_decorators: true,","  esproposal_export_star_as: true,","  types: true,","};","","/**"," * Wrapper to set default options"," */","exports.parse = function parse(code) {","  return flowParser.parse(code, options);","};","",""],"l":{"13":1,"15":1,"26":1,"27":0}},"/home/travis/build/npmtest/node-npmtest-jscodeshift/node_modules/jscodeshift/utils/requirePackage.js":{"path":"/home/travis/build/npmtest/node-npmtest-jscodeshift/node_modules/jscodeshift/utils/requirePackage.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},"b":{"1":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"requirePackage","line":15,"loc":{"start":{"line":15,"column":17},"end":{"line":15,"column":47}}}},"statementMap":{"1":{"start":{"line":13,"column":0},"end":{"line":13,"column":29}},"2":{"start":{"line":15,"column":0},"end":{"line":26,"column":1}},"3":{"start":{"line":16,"column":1},"end":{"line":16,"column":37}},"4":{"start":{"line":17,"column":2},"end":{"line":17,"column":32}},"5":{"start":{"line":18,"column":2},"end":{"line":24,"column":3}},"6":{"start":{"line":19,"column":4},"end":{"line":22,"column":21}},"7":{"start":{"line":20,"column":6},"end":{"line":20,"column":58}},"8":{"start":{"line":21,"column":6},"end":{"line":21,"column":42}},"9":{"start":{"line":23,"column":4},"end":{"line":23,"column":28}},"10":{"start":{"line":25,"column":2},"end":{"line":25,"column":12}}},"branchMap":{"1":{"line":21,"type":"cond-expr","locations":[{"start":{"line":21,"column":33},"end":{"line":21,"column":36}},{"start":{"line":21,"column":39},"end":{"line":21,"column":41}}]}},"code":["/*"," *  Copyright (c) 2015-present, Facebook, Inc."," *  All rights reserved."," *"," *  This source code is licensed under the BSD-style license found in the"," *  LICENSE file in the root directory of this source tree. An additional grant"," *  of patent rights can be found in the PATENTS file in the same directory."," *"," */","","'use strict';","","const path = require('path');","","module.exports = function requirePackage(name) {","\tconst entry = require.resolve(name);","  let dir = path.dirname(entry);","  while (dir !== '/') {","    try {","      const pkg = require(path.join(dir, 'package.json'));","      return pkg.name === name ? pkg : {};","    } catch(error) {} // eslint-disable-line no-empty","    dir = path.dirname(dir);","  }","  return {};","}",""],"l":{"13":1,"15":1,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"23":0,"25":0}},"/home/travis/build/npmtest/node-npmtest-jscodeshift/node_modules/jscodeshift/utils/testUtils.js":{"path":"/home/travis/build/npmtest/node-npmtest-jscodeshift/node_modules/jscodeshift/utils/testUtils.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":1,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":1,"20":1,"21":0,"22":1,"23":1,"24":0,"25":1},"b":{"1":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"renameFileTo","line":18,"loc":{"start":{"line":18,"column":0},"end":{"line":18,"column":44}}},"2":{"name":"createTempFileWith","line":26,"loc":{"start":{"line":26,"column":0},"end":{"line":26,"column":47}}},"3":{"name":"createTransformWith","line":38,"loc":{"start":{"line":38,"column":0},"end":{"line":38,"column":48}}},"4":{"name":"getFileContent","line":46,"loc":{"start":{"line":46,"column":0},"end":{"line":46,"column":34}}}},"statementMap":{"1":{"start":{"line":13,"column":0},"end":{"line":13,"column":25}},"2":{"start":{"line":14,"column":0},"end":{"line":14,"column":33}},"3":{"start":{"line":15,"column":0},"end":{"line":15,"column":29}},"4":{"start":{"line":16,"column":0},"end":{"line":16,"column":29}},"5":{"start":{"line":18,"column":0},"end":{"line":24,"column":1}},"6":{"start":{"line":19,"column":2},"end":{"line":19,"column":44}},"7":{"start":{"line":20,"column":2},"end":{"line":20,"column":54}},"8":{"start":{"line":21,"column":2},"end":{"line":21,"column":37}},"9":{"start":{"line":22,"column":2},"end":{"line":22,"column":34}},"10":{"start":{"line":23,"column":2},"end":{"line":23,"column":17}},"11":{"start":{"line":26,"column":0},"end":{"line":35,"column":1}},"12":{"start":{"line":27,"column":2},"end":{"line":27,"column":31}},"13":{"start":{"line":28,"column":2},"end":{"line":28,"column":27}},"14":{"start":{"line":29,"column":2},"end":{"line":29,"column":33}},"15":{"start":{"line":30,"column":2},"end":{"line":30,"column":24}},"16":{"start":{"line":31,"column":2},"end":{"line":33,"column":3}},"17":{"start":{"line":32,"column":4},"end":{"line":32,"column":48}},"18":{"start":{"line":34,"column":2},"end":{"line":34,"column":18}},"19":{"start":{"line":36,"column":0},"end":{"line":36,"column":48}},"20":{"start":{"line":38,"column":0},"end":{"line":43,"column":1}},"21":{"start":{"line":39,"column":2},"end":{"line":42,"column":4}},"22":{"start":{"line":44,"column":0},"end":{"line":44,"column":50}},"23":{"start":{"line":46,"column":0},"end":{"line":48,"column":1}},"24":{"start":{"line":47,"column":2},"end":{"line":47,"column":46}},"25":{"start":{"line":49,"column":0},"end":{"line":49,"column":40}}},"branchMap":{"1":{"line":31,"type":"if","locations":[{"start":{"line":31,"column":2},"end":{"line":31,"column":2}},{"start":{"line":31,"column":2},"end":{"line":31,"column":2}}]}},"code":["/*"," *  Copyright (c) 2015, Facebook, Inc."," *  All rights reserved."," *"," *  This source code is licensed under the BSD-style license found in the"," *  LICENSE file in the root directory of this source tree. An additional grant"," *  of patent rights can be found in the PATENTS file in the same directory."," *"," */","","'use strict';","","const fs = require('fs');","const mkdirp = require('mkdirp');","const path = require('path');","const temp = require('temp');","","function renameFileTo(oldPath, newFilename) {","  const projectPath = path.dirname(oldPath);","  const newPath = path.join(projectPath, newFilename);","  mkdirp.sync(path.dirname(newPath));","  fs.renameSync(oldPath, newPath);","  return newPath;","}","","function createTempFileWith(content, filename) {","  const info = temp.openSync();","  let filePath = info.path;","  fs.writeSync(info.fd, content);","  fs.closeSync(info.fd);","  if (filename) {","    filePath = renameFileTo(filePath, filename);","  }","  return filePath;","}","exports.createTempFileWith = createTempFileWith;","","function createTransformWith(content, fileName) {","  return createTempFileWith(","    'module.exports = function(fileInfo, api, options) { ' + content + ' }',","    fileName","  );","}","exports.createTransformWith = createTransformWith;","","function getFileContent(filePath) {","  return fs.readFileSync(filePath).toString();","}","exports.getFileContent = getFileContent;",""],"l":{"13":1,"14":1,"15":1,"16":1,"18":1,"19":0,"20":0,"21":0,"22":0,"23":0,"26":1,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"34":0,"36":1,"38":1,"39":0,"44":1,"46":1,"47":0,"49":1}}}